{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.component\";\nimport * as i2 from \"./app.main.component\";\nimport * as i3 from \"./demo/service/app.config.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/inputswitch\";\nimport * as i7 from \"primeng/radiobutton\";\nfunction AppConfigComponent_div_98_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 52);\n    i0.ɵɵelement(1, \"i\", 53);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction AppConfigComponent_div_98_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"a\", 49);\n    i0.ɵɵlistener(\"click\", function AppConfigComponent_div_98_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const t_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.changeTheme(t_r1.name));\n    });\n    i0.ɵɵelement(2, \"span\", 50);\n    i0.ɵɵtemplate(3, AppConfigComponent_div_98_span_3_Template, 2, 0, \"span\", 51);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const t_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, t_r1.color));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.theme === t_r1.name);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"layout-config-active\": a0\n  };\n};\nexport class AppConfigComponent {\n  constructor(app, appMain, configService) {\n    this.app = app;\n    this.appMain = appMain;\n    this.configService = configService;\n    this.theme = 'denim';\n  }\n  ngOnInit() {\n    this.config = this.configService.config;\n    this.subscription = this.configService.configUpdate$.subscribe(config => {\n      this.config = config;\n    });\n    this.themes = [{\n      name: 'denim',\n      color: '#2f8ee5'\n    }, {\n      name: 'sea-green',\n      color: '#30A059'\n    }, {\n      name: 'amethyst',\n      color: '#834CA8'\n    }, {\n      name: 'wedgewood',\n      color: '#557DAA'\n    }, {\n      name: 'tapestry',\n      color: '#A74896'\n    }, {\n      name: 'cape-palliser',\n      color: '#A46B3E'\n    }, {\n      name: 'apple',\n      color: '#52A235'\n    }, {\n      name: 'gigas',\n      color: '#5751A9'\n    }, {\n      name: 'jungle-green',\n      color: '#2B9F9C'\n    }, {\n      name: 'camelot',\n      color: '#A54357'\n    }, {\n      name: 'amber',\n      color: '#D49341'\n    }, {\n      name: 'cyan',\n      color: '#399DB2'\n    }];\n  }\n  onLayoutModeChange(event) {\n    this.app.menuTheme = this.app.layoutMode;\n    this.app.topbarTheme = this.app.layoutMode;\n    const layoutLink = document.getElementById('layout-css');\n    const layoutHref = 'assets/layout/css/layout-' + this.app.layoutMode + '.css';\n    this.replaceLink(layoutLink, layoutHref);\n    const themeLink = document.getElementById('theme-css');\n    const urlTokens = themeLink.getAttribute('href').split('/');\n    urlTokens[urlTokens.length - 1] = 'theme-' + this.app.layoutMode + '.css';\n    const newURL = urlTokens.join('/');\n    this.replaceLink(themeLink, newURL, this.appMain['refreshTrafficChart']);\n    this.configService.updateConfig(Object.assign(Object.assign({}, this.config), {\n      dark: this.app.layoutMode !== 'light'\n    }));\n  }\n  changeTheme(theme) {\n    this.theme = theme;\n    const themeLink = document.getElementById('theme-css');\n    const themeHref = 'assets/theme/' + theme + '/theme-' + this.app.layoutMode + '.css';\n    this.replaceLink(themeLink, themeHref, this.appMain['refreshTrafficChart']);\n  }\n  isIE() {\n    return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent);\n  }\n  replaceLink(linkElement, href, callback) {\n    if (this.isIE()) {\n      linkElement.setAttribute('href', href);\n      if (callback) {\n        callback();\n      }\n    } else {\n      const id = linkElement.getAttribute('id');\n      const cloneLinkElement = linkElement.cloneNode(true);\n      cloneLinkElement.setAttribute('href', href);\n      cloneLinkElement.setAttribute('id', id + '-clone');\n      linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\n      cloneLinkElement.addEventListener('load', () => {\n        linkElement.remove();\n        cloneLinkElement.setAttribute('id', id);\n        if (callback) {\n          callback();\n        }\n      });\n    }\n  }\n  onConfigButtonClick(event) {\n    this.appMain.configActive = !this.appMain.configActive;\n    this.appMain.configClick = true;\n    event.preventDefault();\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\nAppConfigComponent.ɵfac = function AppConfigComponent_Factory(t) {\n  return new (t || AppConfigComponent)(i0.ɵɵdirectiveInject(i1.AppComponent), i0.ɵɵdirectiveInject(i2.AppMainComponent), i0.ɵɵdirectiveInject(i3.ConfigService));\n};\nAppConfigComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppConfigComponent,\n  selectors: [[\"app-config\"]],\n  decls: 99,\n  vars: 26,\n  consts: [[\"id\", \"layout-config\", 1, \"layout-config\", 3, \"ngClass\", \"click\"], [\"id\", \"layout-config-button\", 1, \"layout-config-button\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"pi\", \"pi-cog\"], [1, \"layout-config-content\"], [\"id\", \"config-form\", 1, \"layout-config-form\"], [1, \"layout-config-header\"], [\"id\", \"lightdark-panel\", 1, \"layout-config-section\", \"options\"], [1, \"flex\", \"justify-content-between\"], [1, \"flex\", \"align-items-center\"], [\"name\", \"layoutMode\", \"value\", \"light\", \"inputId\", \"layoutMode1\", 3, \"ngModel\", \"ngModelChange\", \"onClick\"], [\"for\", \"layoutMode1\", 1, \"ml-2\"], [\"name\", \"layoutMode\", \"value\", \"dark\", \"inputId\", \"layoutMode2\", 3, \"ngModel\", \"ngModelChange\", \"onClick\"], [\"for\", \"layoutMode2\", 1, \"ml-2\"], [\"name\", \"layoutMode\", \"value\", \"dim\", \"inputId\", \"layoutMode3\", 3, \"ngModel\", \"ngModelChange\", \"onClick\"], [\"for\", \"layoutMode3\", 1, \"ml-2\"], [\"id\", \"menumodes-panel\", 1, \"layout-config-section\", \"options\"], [1, \"mt-2\"], [\"name\", \"menuMode\", \"value\", \"static\", \"inputId\", \"menuMode1\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"menuMode1\", 1, \"ml-2\"], [\"name\", \"menuMode\", \"value\", \"overlay\", \"inputId\", \"menuMode2\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"menuMode2\", 1, \"ml-2\"], [\"name\", \"menuMode\", \"value\", \"horizontal\", \"inputId\", \"menuMode3\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"menuMode3\", 1, \"ml-2\"], [\"id\", \"menuthemes-panel\", 1, \"layout-config-section\", \"options\"], [\"name\", \"menuTheme\", \"value\", \"light\", \"inputId\", \"menuTheme1\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"], [\"for\", \"menuTheme1\", 1, \"ml-2\"], [\"name\", \"menuTheme\", \"value\", \"dark\", \"inputId\", \"menuTheme2\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"], [\"for\", \"menuTheme2\", 1, \"ml-2\"], [\"name\", \"menuTheme\", \"value\", \"dim\", \"inputId\", \"menuTheme3\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"], [\"for\", \"menuTheme3\", 1, \"ml-2\"], [\"id\", \"topbarthemes-panel\", 1, \"layout-config-section\", \"options\"], [\"name\", \"topbarTheme\", \"value\", \"light\", \"inputId\", \"topbarTheme1\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"], [\"for\", \"topbarTheme1\", 1, \"ml-2\"], [\"name\", \"topbarTheme\", \"value\", \"dark\", \"inputId\", \"topbarTheme2\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"], [\"for\", \"topbarTheme2\", 1, \"ml-2\"], [\"name\", \"topbarTheme\", \"value\", \"dim\", \"inputId\", \"topbarTheme3\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"], [\"for\", \"topbarTheme3\", 1, \"ml-2\"], [\"id\", \"outlined-panel\", 1, \"layout-config-section\", \"options\"], [\"name\", \"inputStyle\", \"value\", \"outlined\", \"inputId\", \"inputStyle1\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputStyle1\", 1, \"ml-2\"], [\"name\", \"inputStyle\", \"value\", \"filled\", \"inputId\", \"inputStyle2\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputStyle2\", 1, \"ml-2\"], [\"id\", \"ripple-panel\", 1, \"layout-config-section\", \"ripple\"], [3, \"ngModel\", \"onChange\"], [\"id\", \"orientation-panel\", 1, \"layout-config-section\", \"dark\"], [\"id\", \"componentthemes-panel\", 1, \"layout-config-section\", \"colors\"], [1, \"grid\", \"layout-config-colors\"], [\"class\", \"col col-fixed\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\", \"col-fixed\"], [1, \"layout-config-option\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"layout-config-option-color\", 3, \"ngStyle\"], [\"class\", \"layout-config-option-check-mask\", 4, \"ngIf\"], [1, \"layout-config-option-check-mask\"], [1, \"pi\", \"pi-check\"]],\n  template: function AppConfigComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function AppConfigComponent_Template_div_click_0_listener($event) {\n        return ctx.appMain.onConfigClick($event);\n      });\n      i0.ɵɵelementStart(1, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function AppConfigComponent_Template_a_click_1_listener($event) {\n        return ctx.onConfigButtonClick($event);\n      });\n      i0.ɵɵelement(2, \"i\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\");\n      i0.ɵɵtext(7, \"Theme Customization\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"span\");\n      i0.ɵɵtext(9, \"Poseidon offers different themes for layout, topbar, menu etc.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"h6\");\n      i0.ɵɵtext(12, \"Color Mode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"div\", 8)(15, \"p-radioButton\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_15_listener($event) {\n        return ctx.app.layoutMode = $event;\n      })(\"onClick\", function AppConfigComponent_Template_p_radioButton_onClick_15_listener($event) {\n        return ctx.onLayoutModeChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Light\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 8)(19, \"p-radioButton\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_19_listener($event) {\n        return ctx.app.layoutMode = $event;\n      })(\"onClick\", function AppConfigComponent_Template_p_radioButton_onClick_19_listener($event) {\n        return ctx.onLayoutModeChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Dark\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 8)(23, \"p-radioButton\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_23_listener($event) {\n        return ctx.app.layoutMode = $event;\n      })(\"onClick\", function AppConfigComponent_Template_p_radioButton_onClick_23_listener($event) {\n        return ctx.onLayoutModeChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Dim\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(26, \"div\", 15)(27, \"h6\", 16);\n      i0.ɵɵtext(28, \"Menu Mode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 7)(30, \"div\", 8)(31, \"p-radioButton\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_31_listener($event) {\n        return ctx.app.menuMode = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"label\", 18);\n      i0.ɵɵtext(33, \"Static\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 8)(35, \"p-radioButton\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_35_listener($event) {\n        return ctx.app.menuMode = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"label\", 20);\n      i0.ɵɵtext(37, \"Overlay\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 8)(39, \"p-radioButton\", 21);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_39_listener($event) {\n        return ctx.app.menuMode = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"label\", 22);\n      i0.ɵɵtext(41, \"Horizontal\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(42, \"div\", 23)(43, \"h6\", 16);\n      i0.ɵɵtext(44, \"Menu Theme\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 7)(46, \"div\", 8)(47, \"p-radioButton\", 24);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_47_listener($event) {\n        return ctx.app.menuTheme = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"label\", 25);\n      i0.ɵɵtext(49, \"Light\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(50, \"div\", 8)(51, \"p-radioButton\", 26);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_51_listener($event) {\n        return ctx.app.menuTheme = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"label\", 27);\n      i0.ɵɵtext(53, \"Dark\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"div\", 8)(55, \"p-radioButton\", 28);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_55_listener($event) {\n        return ctx.app.menuTheme = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"label\", 29);\n      i0.ɵɵtext(57, \"Dim\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(58, \"div\", 30)(59, \"h6\", 16);\n      i0.ɵɵtext(60, \"TopBar Mode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"div\", 7)(62, \"div\", 8)(63, \"p-radioButton\", 31);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_63_listener($event) {\n        return ctx.app.topbarTheme = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"label\", 32);\n      i0.ɵɵtext(65, \"Light\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(66, \"div\", 8)(67, \"p-radioButton\", 33);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_67_listener($event) {\n        return ctx.app.topbarTheme = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"label\", 34);\n      i0.ɵɵtext(69, \"Dark\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(70, \"div\", 8)(71, \"p-radioButton\", 35);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_71_listener($event) {\n        return ctx.app.topbarTheme = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(72, \"label\", 36);\n      i0.ɵɵtext(73, \"Dim\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(74, \"div\", 37)(75, \"h6\", 16);\n      i0.ɵɵtext(76, \"Input Background\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"div\", 7)(78, \"div\", 8)(79, \"p-radioButton\", 38);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_79_listener($event) {\n        return ctx.app.inputStyle = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(80, \"label\", 39);\n      i0.ɵɵtext(81, \"Outlined\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(82, \"div\", 8)(83, \"p-radioButton\", 40);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_83_listener($event) {\n        return ctx.app.inputStyle = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(84, \"label\", 41);\n      i0.ɵɵtext(85, \"Filled\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(86, \"div\", 42)(87, \"h6\", 16);\n      i0.ɵɵtext(88, \"Ripple Effect\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(89, \"p-inputSwitch\", 43);\n      i0.ɵɵlistener(\"onChange\", function AppConfigComponent_Template_p_inputSwitch_onChange_89_listener($event) {\n        return ctx.appMain.onRippleChange($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(90, \"div\", 44)(91, \"h6\", 16);\n      i0.ɵɵtext(92, \"RTL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(93, \"p-inputSwitch\", 43);\n      i0.ɵɵlistener(\"onChange\", function AppConfigComponent_Template_p_inputSwitch_onChange_93_listener($event) {\n        return ctx.appMain.onRTLChange($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(94, \"div\", 45)(95, \"h6\", 16);\n      i0.ɵɵtext(96, \"Component Themes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(97, \"div\", 46);\n      i0.ɵɵtemplate(98, AppConfigComponent_div_98_Template, 4, 4, \"div\", 47);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c1, ctx.appMain.configActive));\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.layoutMode);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.layoutMode);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.layoutMode);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.menuMode);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.menuMode);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.menuMode);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"disabled\", ctx.app.layoutMode !== \"light\")(\"ngModel\", ctx.app.menuTheme);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.app.layoutMode !== \"light\")(\"ngModel\", ctx.app.menuTheme);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.app.layoutMode !== \"light\")(\"ngModel\", ctx.app.menuTheme);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"disabled\", ctx.app.layoutMode !== \"light\")(\"ngModel\", ctx.app.topbarTheme);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.app.layoutMode !== \"light\")(\"ngModel\", ctx.app.topbarTheme);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.app.layoutMode !== \"light\")(\"ngModel\", ctx.app.topbarTheme);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.inputStyle);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.inputStyle);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.ripple);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.app.isRTL);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.themes);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i4.NgStyle, i5.NgControlStatus, i5.NgModel, i6.InputSwitch, i7.RadioButton],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","AppConfigComponent","constructor","app","appMain","configService","ngOnInit","config","subscription","configUpdate$","subscribe","themes","name","color","onLayoutModeChange","event","menuTheme","layoutMode","topbarTheme","layoutLink","document","getElementById","layoutHref","replaceLink","themeLink","urlTokens","getAttribute","split","length","newURL","join","updateConfig","dark","changeTheme","theme","themeHref","isIE","test","window","navigator","userAgent","linkElement","href","callback","setAttribute","id","cloneLinkElement","cloneNode","parentNode","insertBefore","nextSibling","addEventListener","remove","onConfigButtonClick","configActive","configClick","preventDefault","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/app.config.component.ts"],"sourcesContent":["import {Component, OnInit, OnDestroy} from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppMainComponent } from './app.main.component';\nimport {ConfigService} from './demo/service/app.config.service';\nimport {AppConfig} from './demo/domain/appconfig';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'app-config',\n    template: `\n        <div id=\"layout-config\" class=\"layout-config\" [ngClass]=\"{'layout-config-active': appMain.configActive}\" (click)=\"appMain.onConfigClick($event)\">\n            <a style=\"cursor: pointer\" id=\"layout-config-button\" class=\"layout-config-button\" (click)=\"onConfigButtonClick($event)\">\n                <i class=\"pi pi-cog\"></i>\n            </a>\n            <div class=\"layout-config-content\">\n                <div class=\"layout-config-form\" id=\"config-form\">\n                    <div class=\"layout-config-header\">\n                        <h5>Theme Customization</h5>\n                        <span>Poseidon offers different themes for layout, topbar, menu etc.</span>\n                    </div>\n\n                    <div id=\"lightdark-panel\" class=\"layout-config-section options\">\n                        <h6>Color Mode</h6>\n                        <div class=\"flex justify-content-between\">\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"layoutMode\" value=\"light\" [(ngModel)]=\"app.layoutMode\" inputId=\"layoutMode1\" (onClick)=\"onLayoutModeChange($event)\"></p-radioButton>\n                                <label for=\"layoutMode1\" class=\"ml-2\">Light</label>\n                            </div>\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"layoutMode\" value=\"dark\" [(ngModel)]=\"app.layoutMode\" inputId=\"layoutMode2\" (onClick)=\"onLayoutModeChange($event)\"></p-radioButton>\n                                <label for=\"layoutMode2\" class=\"ml-2\">Dark</label>\n                            </div>\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"layoutMode\" value=\"dim\" [(ngModel)]=\"app.layoutMode\" inputId=\"layoutMode3\" (onClick)=\"onLayoutModeChange($event)\"></p-radioButton>\n                                <label for=\"layoutMode3\" class=\"ml-2\">Dim</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id=\"menumodes-panel\" class=\"layout-config-section options\">\n                        <h6 class=\"mt-2\">Menu Mode</h6>\n                        <div class=\"flex justify-content-between\">\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"menuMode\" value=\"static\" [(ngModel)]=\"app.menuMode\" inputId=\"menuMode1\"></p-radioButton>\n                                <label for=\"menuMode1\" class=\"ml-2\">Static</label>\n                            </div>\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"menuMode\" value=\"overlay\" [(ngModel)]=\"app.menuMode\" inputId=\"menuMode2\"></p-radioButton>\n                                <label for=\"menuMode2\" class=\"ml-2\">Overlay</label>\n                            </div>\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"menuMode\" value=\"horizontal\" [(ngModel)]=\"app.menuMode\" inputId=\"menuMode3\"></p-radioButton>\n                                <label for=\"menuMode3\" class=\"ml-2\">Horizontal</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id=\"menuthemes-panel\" class=\"layout-config-section options\">\n                        <h6 class=\"mt-2\">Menu Theme</h6>\n                        <div class=\"flex justify-content-between\">\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"menuTheme\" [disabled]=\"app.layoutMode !== 'light'\" value=\"light\" [(ngModel)]=\"app.menuTheme\" inputId=\"menuTheme1\"></p-radioButton>\n                                <label for=\"menuTheme1\" class=\"ml-2\">Light</label>\n                            </div>\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"menuTheme\" [disabled]=\"app.layoutMode !== 'light'\" value=\"dark\" [(ngModel)]=\"app.menuTheme\" inputId=\"menuTheme2\"></p-radioButton>\n                                <label for=\"menuTheme2\" class=\"ml-2\">Dark</label>\n                            </div>\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"menuTheme\" [disabled]=\"app.layoutMode !== 'light'\" value=\"dim\" [(ngModel)]=\"app.menuTheme\" inputId=\"menuTheme3\"></p-radioButton>\n                                <label for=\"menuTheme3\" class=\"ml-2\">Dim</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id=\"topbarthemes-panel\" class=\"layout-config-section options\">\n                        <h6 class=\"mt-2\">TopBar Mode</h6>\n                        <div class=\"flex justify-content-between\">\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"topbarTheme\" [disabled]=\"app.layoutMode !== 'light'\" value=\"light\" [(ngModel)]=\"app.topbarTheme\" inputId=\"topbarTheme1\"></p-radioButton>\n                                <label for=\"topbarTheme1\" class=\"ml-2\">Light</label>\n                            </div>\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"topbarTheme\" [disabled]=\"app.layoutMode !== 'light'\" value=\"dark\" [(ngModel)]=\"app.topbarTheme\" inputId=\"topbarTheme2\"></p-radioButton>\n                                <label for=\"topbarTheme2\" class=\"ml-2\">Dark</label>\n                            </div>\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"topbarTheme\" [disabled]=\"app.layoutMode !== 'light'\" value=\"dim\" [(ngModel)]=\"app.topbarTheme\" inputId=\"topbarTheme3\"></p-radioButton>\n                                <label for=\"topbarTheme3\" class=\"ml-2\">Dim</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id=\"outlined-panel\" class=\"layout-config-section options\">\n                        <h6 class=\"mt-2\">Input Background</h6>\n                        <div class=\"flex justify-content-between\">\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"inputStyle\" value=\"outlined\" [(ngModel)]=\"app.inputStyle\" inputId=\"inputStyle1\"></p-radioButton>\n                                <label for=\"inputStyle1\" class=\"ml-2\">Outlined</label>\n                            </div>\n                            <div class=\"flex align-items-center\">\n                                <p-radioButton name=\"inputStyle\" value=\"filled\" [(ngModel)]=\"app.inputStyle\" inputId=\"inputStyle2\"></p-radioButton>\n                                <label for=\"inputStyle2\" class=\"ml-2\">Filled</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id=\"ripple-panel\" class=\"layout-config-section ripple\">\n                        <h6 class=\"mt-2\">Ripple Effect</h6>\n                        <p-inputSwitch [ngModel]=\"app.ripple\" (onChange)=\"appMain.onRippleChange($event)\"></p-inputSwitch>\n                    </div>\n\n                    <div id=\"orientation-panel\" class=\"layout-config-section dark\">\n                        <h6 class=\"mt-2\">RTL</h6>\n                        <p-inputSwitch [ngModel]=\"app.isRTL\" (onChange)=\"appMain.onRTLChange($event)\"></p-inputSwitch>\n                    </div>\n\n                    <div id=\"componentthemes-panel\" class=\"layout-config-section colors\">\n                        <h6 class=\"mt-2\">Component Themes</h6>\n                        <div class=\"grid layout-config-colors\">\n                            <div *ngFor=\"let t of themes\" class=\"col col-fixed\">\n                                <a style=\"cursor: pointer\" (click)=\"changeTheme(t.name)\" class=\"layout-config-option\">\n                                    <span class=\"layout-config-option-color\" [ngStyle]=\"{'background-color': t.color}\"></span>\n                                    <span class=\"layout-config-option-check-mask\" *ngIf=\"theme === t.name\">\n                                        <i class=\"pi pi-check\"></i>\n                                    </span>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `\n})\nexport class AppConfigComponent implements OnInit, OnDestroy {\n\n    themes: any[];\n\n    theme = 'denim';\n\n    config: AppConfig;\n\n    subscription: Subscription;\n\n    constructor(public app: AppComponent, public appMain: AppMainComponent, public configService: ConfigService) {}\n\n    ngOnInit() {\n        this.config = this.configService.config;\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\n            this.config = config;\n        });\n\n        this.themes = [\n            {name: 'denim', color: '#2f8ee5'},\n            {name: 'sea-green', color: '#30A059'},\n            {name: 'amethyst', color: '#834CA8'},\n            {name: 'wedgewood', color: '#557DAA'},\n            {name: 'tapestry', color: '#A74896'},\n            {name: 'cape-palliser', color: '#A46B3E'},\n            {name: 'apple', color: '#52A235'},\n            {name: 'gigas', color: '#5751A9'},\n            {name: 'jungle-green', color: '#2B9F9C'},\n            {name: 'camelot', color: '#A54357'},\n            {name: 'amber', color: '#D49341'},\n            {name: 'cyan', color: '#399DB2'}\n        ];\n    }\n\n    onLayoutModeChange(event) {\n        this.app.menuTheme = this.app.layoutMode;\n        this.app.topbarTheme = this.app.layoutMode;\n\n        const layoutLink: HTMLLinkElement = document.getElementById('layout-css') as HTMLLinkElement;\n        const layoutHref = 'assets/layout/css/layout-' + this.app.layoutMode + '.css';\n        this.replaceLink(layoutLink, layoutHref);\n\n        const themeLink = document.getElementById('theme-css');\n        const urlTokens = themeLink.getAttribute('href').split('/');\n        urlTokens[urlTokens.length - 1] = 'theme-' + this.app.layoutMode + '.css';\n        const newURL = urlTokens.join('/');\n\n        this.replaceLink(themeLink, newURL, this.appMain['refreshTrafficChart']);\n\n        this.configService.updateConfig({...this.config, ...{dark: this.app.layoutMode !== 'light' }});\n    }\n\n    changeTheme(theme) {\n        this.theme = theme;\n\n        const themeLink: HTMLLinkElement = document.getElementById('theme-css') as HTMLLinkElement;\n        const themeHref = 'assets/theme/' + theme + '/theme-' + this.app.layoutMode + '.css';\n        this.replaceLink(themeLink, themeHref, this.appMain['refreshTrafficChart']);\n    }\n\n    isIE() {\n        return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent);\n    }\n\n    replaceLink(linkElement, href, callback?) {\n        if (this.isIE()) {\n            linkElement.setAttribute('href', href);\n            if (callback) {\n                callback();\n            }\n        } else {\n            const id = linkElement.getAttribute('id');\n            const cloneLinkElement = linkElement.cloneNode(true);\n\n            cloneLinkElement.setAttribute('href', href);\n            cloneLinkElement.setAttribute('id', id + '-clone');\n\n            linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\n\n            cloneLinkElement.addEventListener('load', () => {\n                linkElement.remove();\n                cloneLinkElement.setAttribute('id', id);\n\n                if (callback) {\n                    callback();\n                }\n            });\n        }\n    }\n\n    onConfigButtonClick(event) {\n        this.appMain.configActive = !this.appMain.configActive;\n        this.appMain.configClick = true;\n        event.preventDefault();\n    }\n    \n    ngOnDestroy() {\n        if(this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}