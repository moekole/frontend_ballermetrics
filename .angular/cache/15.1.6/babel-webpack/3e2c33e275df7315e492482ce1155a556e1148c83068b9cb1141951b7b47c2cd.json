{"ast":null,"code":"import { ConfirmationService, MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"primeng/button\";\nimport * as i4 from \"primeng/inputtext\";\nimport * as i5 from \"primeng/ripple\";\nconst _c0 = function () {\n  return [\"/\"];\n};\nexport class RegisterComponent {\n  constructor(messageService, confirmationService) {\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n  }\n  register2() {\n    console.log(\"hier\");\n    console.log('in register');\n    const vornamef = document.getElementById('vorname');\n    const nachnamef = document.getElementById('nachname');\n    const emailf = document.getElementById('email');\n    const passwordf = document.getElementById('password');\n    //document.getElementById('password') as HTMLInputElement\n    const vorname = vornamef.value;\n    const nachname = nachnamef.value;\n    const email = emailf.value;\n    const password = passwordf.value;\n    console.log(vorname, nachname, email, password);\n    const url = 'https://ballermetrics-backend2.onrender.com/registration/register';\n    console.log(url);\n    var user = {\n      firstName: vorname,\n      lastName: nachname,\n      email: email,\n      password: password\n    };\n    console.log(user);\n    var init = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    };\n    console.log(init);\n    fetch(url, init).then(res => {\n      if (!res.ok) {\n        console.log(\"fetch fehler\");\n      }\n      return res.json();\n    }).then(json => {\n      localStorage.setItem('jwttoken', JSON.stringify({\n        token: json.token\n      }));\n      console.log(json);\n      //var currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      //var token = currentUser.token; // your token\n      console.log(localStorage.getItem('jwttoken'));\n    }).catch(err => {\n      console.log(err);\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Fehler beim Registieren. Cors kuss Jonas',\n        life: 5000\n      });\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i1.ConfirmationService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  features: [i0.ɵɵProvidersFeature([MessageService, ConfirmationService])],\n  decls: 36,\n  vars: 4,\n  consts: [[1, \"login-body\"], [1, \"login-wrapper\"], [1, \"login-panel\"], [1, \"logo\", 3, \"routerLink\"], [\"src\", \"assets/layout/images/logo.png\", \"alt\", \"poseidon-layout\"], [1, \"login-form\"], [3, \"routerLink\"], [1, \"p-fluid\", \"p-formgrid\", \"grid\"], [1, \"field\", \"col-12\", \"md:col-6\"], [1, \"p-float-label\"], [\"type\", \"text\", \"id\", \"vorname\", \"pInputText\", \"\"], [\"for\", \"inputtext\"], [\"type\", \"text\", \"id\", \"nachname\", \"pInputText\", \"\"], [1, \"field\", \"col-12\", \"md:col-12\"], [\"type\", \"text\", \"id\", \"email\", \"pInputText\", \"\"], [\"type\", \"text\", \"id\", \"password\", \"pInputText\", \"\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Registrieren\", \"type\", \"button\", 2, \"background-color\", \"#51C4A6\", \"border-color\", \"transparent\", 3, \"routerLink\", \"click\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"a\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"h2\");\n      i0.ɵɵtext(7, \"Registrieren\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9, \"Hast du schon einen Account? \");\n      i0.ɵɵelementStart(10, \"a\", 6);\n      i0.ɵɵtext(11, \" Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"div\", 8)(14, \"span\", 9);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementStart(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Vorname\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 8)(19, \"span\", 9);\n      i0.ɵɵelement(20, \"input\", 12);\n      i0.ɵɵelementStart(21, \"label\", 11);\n      i0.ɵɵtext(22, \"Nachname\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 13)(24, \"span\", 9);\n      i0.ɵɵelement(25, \"input\", 14);\n      i0.ɵɵelementStart(26, \"label\", 11);\n      i0.ɵɵtext(27, \"E-Mail\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"div\", 13)(29, \"span\", 9);\n      i0.ɵɵelement(30, \"input\", 15);\n      i0.ɵɵelementStart(31, \"label\", 11);\n      i0.ɵɵtext(32, \"Passwort\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(33, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_33_listener() {\n        return ctx.register2();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"p\");\n      i0.ɵɵtext(35, \"BallerMetrics\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"routerLink\", \"/login\");\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"routerLink\", \"/login\");\n    }\n  },\n  dependencies: [i2.RouterLink, i3.ButtonDirective, i4.InputText, i5.Ripple],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["ConfirmationService","MessageService","RegisterComponent","constructor","messageService","confirmationService","register2","console","log","vornamef","document","getElementById","nachnamef","emailf","passwordf","vorname","value","nachname","email","password","url","user","firstName","lastName","init","method","headers","body","JSON","stringify","fetch","then","res","ok","json","localStorage","setItem","token","getItem","catch","err","add","severity","summary","life","selectors","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/pages/register.component.ts","/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/pages/register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {ConfirmationService, MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-register',\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent {\n  constructor(private messageService: MessageService, private confirmationService: ConfirmationService) \n    {}\n\n  register2() {\n    console.log(\"hier\")\n    console.log('in register');\n    const vornamef = document.getElementById('vorname') as HTMLInputElement;\n    const nachnamef = document.getElementById('nachname') as HTMLInputElement;\n    const emailf = document.getElementById('email') as HTMLInputElement;\n    const passwordf = document.getElementById('password') as HTMLInputElement;\n    //document.getElementById('password') as HTMLInputElement\n\n\n    const vorname = vornamef.value;\n    const nachname = nachnamef.value;\n    const email = emailf.value;\n    const password = passwordf.value;\n\n    console.log(vorname, nachname, email, password);\n\n    const url = 'https://ballermetrics-backend2.onrender.com/registration/register';\n\n    console.log(url);\n\n    var user = {\n      firstName: vorname,\n      lastName: nachname,\n      email: email,\n      password: password\n    }\n\n    console.log(user);\n\n    var init: RequestInit = {\n      method : 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    };\n\n    console.log(init);\n\n    \n\n    fetch(url, init)\n    .then(res => {\n      if(!res.ok){\n        console.log(\"fetch fehler\");\n      }\n      return res.json();\n    }).then(json => {\n      localStorage.setItem('jwttoken', JSON.stringify({ token: json.token}));\n      console.log(json);\n\n      //var currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      //var token = currentUser.token; // your token\n      console.log(localStorage.getItem('jwttoken'));\n      \n    }).catch(err => {\n      console.log(err);\n      this.messageService.add({ severity: 'error', summary: 'Fehler beim Registieren. Cors kuss Jonas', life: 5000 });\n    });\n  }\n\n}\n","<div class=\"login-body\">\n    <div class=\"login-wrapper\">\n        <div class=\"login-panel\">\n            <a [routerLink]=\"['/']\" class=\"logo\">\n                <img src=\"assets/layout/images/logo.png\" alt=\"poseidon-layout\" />\n            </a>\n            \n            <div class=\"login-form\">\n                <h2>Registrieren</h2>\n                <p>Hast du schon einen Account? <a [routerLink]=\"'/login'\"> Login</a></p>\n                <div class=\"p-fluid p-formgrid grid\">\n                    <div class=\"field col-12 md:col-6\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" id=\"vorname\" pInputText >\n                            <label for=\"inputtext\">Vorname</label>\n                        </span>\n                    </div>\n                    <div class=\"field col-12 md:col-6\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" id=\"nachname\" pInputText >\n                            <label for=\"inputtext\">Nachname</label>\n                        </span>\n                    </div>\n                    <div class=\"field col-12 md:col-12\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" id=\"email\" pInputText >\n                            <label for=\"inputtext\">E-Mail</label>\n                        </span>\n                    </div>\n\n                    <div class=\"field col-12 md:col-12\">\n                        <span class=\"p-float-label\">\n                            <input type=\"text\" id=\"password\" pInputText >\n                            <label for=\"inputtext\">Passwort</label>\n                        </span>\n                    </div>\n                </div>\n                \n                <button style=\"background-color: #51C4A6;border-color: transparent;\" pButton pRipple label=\"Registrieren\" type=\"button\" (click)=\"register2()\" [routerLink]=\"'/login'\"></button>\n                \n            </div>\n            \n                \n            \n            \n\n            \n        \n            \n            \n\n            <p>BallerMetrics</p>\n\n            \n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}