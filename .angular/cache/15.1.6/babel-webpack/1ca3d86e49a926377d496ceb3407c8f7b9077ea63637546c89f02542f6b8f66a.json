{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/countryservice\";\nimport * as i2 from \"../../app.breadcrumb.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"primeng/autocomplete\";\nimport * as i5 from \"primeng/calendar\";\nimport * as i6 from \"primeng/chips\";\nimport * as i7 from \"primeng/inputtext\";\nimport * as i8 from \"primeng/dropdown\";\nimport * as i9 from \"primeng/inputnumber\";\nimport * as i10 from \"primeng/inputmask\";\nimport * as i11 from \"primeng/inputtextarea\";\nimport * as i12 from \"primeng/multiselect\";\nexport class FloatLabelDemoComponent {\n  constructor(countryService, breadcrumbService) {\n    this.countryService = countryService;\n    this.breadcrumbService = breadcrumbService;\n    this.breadcrumbService.setItems([{\n      label: 'UI Kit'\n    }, {\n      label: 'Float Label'\n    }]);\n    this.cities = [{\n      name: 'New York',\n      code: 'NY'\n    }, {\n      name: 'Rome',\n      code: 'RM'\n    }, {\n      name: 'London',\n      code: 'LDN'\n    }, {\n      name: 'Istanbul',\n      code: 'IST'\n    }, {\n      name: 'Paris',\n      code: 'PRS'\n    }];\n  }\n  ngOnInit() {\n    this.countryService.getCountries().then(countries => {\n      this.countries = countries;\n    });\n  }\n  searchCountry(event) {\n    // in a real application, make a request to a remote url with the query and\n    // return filtered results, for demo we filter at client side\n    const filtered = [];\n    const query = event.query;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < this.countries.length; i++) {\n      const country = this.countries[i];\n      if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n        filtered.push(country);\n      }\n    }\n    this.filteredCountries = filtered;\n  }\n}\nFloatLabelDemoComponent.ɵfac = function FloatLabelDemoComponent_Factory(t) {\n  return new (t || FloatLabelDemoComponent)(i0.ɵɵdirectiveInject(i1.CountryService), i0.ɵɵdirectiveInject(i2.AppBreadcrumbService));\n};\nFloatLabelDemoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FloatLabelDemoComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 74,\n  vars: 17,\n  consts: [[1, \"card\"], [1, \"grid\", \"p-fluid\", \"mt-3\"], [1, \"field\", \"col-12\", \"md:col-4\"], [1, \"p-float-label\"], [\"type\", \"text\", \"id\", \"inputtext\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputtext\"], [\"inputId\", \"autocomplete\", \"field\", \"name\", 3, \"ngModel\", \"suggestions\", \"ngModelChange\", \"completeMethod\"], [\"for\", \"autocomplete\"], [1, \"p-float-label\", \"p-input-icon-left\"], [1, \"pi\", \"pi-search\"], [\"type\", \"text\", \"id\", \"lefticon\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lefticon\"], [1, \"p-float-label\", \"p-input-icon-right\"], [\"type\", \"text\", \"id\", \"righticon\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"righticon\"], [1, \"pi\", \"pi-spin\", \"pi-spinner\"], [\"inputId\", \"calendar\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"calendar\"], [\"inputId\", \"chips\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"chips\"], [\"inputId\", \"inputmask\", \"mask\", \"99/99/9999\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputmask\"], [\"inputId\", \"inputnumber\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputnumber\"], [1, \"p-inputgroup\"], [1, \"p-inputgroup-addon\"], [1, \"pi\", \"pi-user\"], [\"type\", \"text\", \"inputId\", \"inputgroup\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputgroup\"], [\"inputId\", \"dropdown\", \"optionLabel\", \"name\", 3, \"autoDisplayFirst\", \"options\", \"ngModel\", \"ngModelChange\"], [\"for\", \"dropdown\"], [\"inputId\", \"multiselect\", \"optionLabel\", \"name\", 3, \"options\", \"ngModel\", \"filter\", \"ngModelChange\"], [\"for\", \"multiselect\"], [\"inputId\", \"textarea\", \"rows\", \"3\", \"cols\", \"30\", \"pInputTextarea\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"textarea\"]],\n  template: function FloatLabelDemoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\");\n      i0.ɵɵtext(2, \"Float Label\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"All input text components support floating labels by adding (\");\n      i0.ɵɵelementStart(5, \"mark\");\n      i0.ɵɵtext(6, \".p-float-label\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \") to wrapper class.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"div\", 2)(10, \"span\", 3)(11, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.value1 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 5);\n      i0.ɵɵtext(13, \"InputText\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"span\", 3)(16, \"p-autoComplete\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_p_autoComplete_ngModelChange_16_listener($event) {\n        return ctx.value2 = $event;\n      })(\"completeMethod\", function FloatLabelDemoComponent_Template_p_autoComplete_completeMethod_16_listener($event) {\n        return ctx.searchCountry($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"label\", 7);\n      i0.ɵɵtext(18, \"AutoComplete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 2)(20, \"span\", 8);\n      i0.ɵɵelement(21, \"i\", 9);\n      i0.ɵɵelementStart(22, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.value3 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"label\", 11);\n      i0.ɵɵtext(24, \"Left Icon\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 2)(26, \"span\", 12)(27, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.value4 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"label\", 14);\n      i0.ɵɵtext(29, \"Right Icon\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"i\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 2)(32, \"span\", 3)(33, \"p-calendar\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_p_calendar_ngModelChange_33_listener($event) {\n        return ctx.value5 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"label\", 17);\n      i0.ɵɵtext(35, \"Calendar\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"div\", 2)(37, \"span\", 3)(38, \"p-chips\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_p_chips_ngModelChange_38_listener($event) {\n        return ctx.value6 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"label\", 19);\n      i0.ɵɵtext(40, \"Chips\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"div\", 2)(42, \"span\", 3)(43, \"p-inputMask\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_p_inputMask_ngModelChange_43_listener($event) {\n        return ctx.value7 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"label\", 21);\n      i0.ɵɵtext(45, \"InputMask\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(46, \"div\", 2)(47, \"span\", 3)(48, \"p-inputNumber\", 22);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_p_inputNumber_ngModelChange_48_listener($event) {\n        return ctx.value8 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"label\", 23);\n      i0.ɵɵtext(50, \"InputNumber\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(51, \"div\", 2)(52, \"div\", 24)(53, \"span\", 25);\n      i0.ɵɵelement(54, \"i\", 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"span\", 3)(56, \"input\", 27);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_input_ngModelChange_56_listener($event) {\n        return ctx.value9 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"label\", 28);\n      i0.ɵɵtext(58, \"InputGroup\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(59, \"div\", 2)(60, \"span\", 3)(61, \"p-dropdown\", 29);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_p_dropdown_ngModelChange_61_listener($event) {\n        return ctx.value10 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"label\", 30);\n      i0.ɵɵtext(63, \"Dropdown\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(64, \"div\", 2)(65, \"span\", 3)(66, \"p-multiSelect\", 31);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_p_multiSelect_ngModelChange_66_listener($event) {\n        return ctx.value11 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"label\", 32);\n      i0.ɵɵtext(68, \"MultiSelect\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(69, \"div\", 2)(70, \"span\", 3)(71, \"textarea\", 33);\n      i0.ɵɵlistener(\"ngModelChange\", function FloatLabelDemoComponent_Template_textarea_ngModelChange_71_listener($event) {\n        return ctx.value12 = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(72, \"label\", 34);\n      i0.ɵɵtext(73, \"Textarea\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.value1);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.value2)(\"suggestions\", ctx.filteredCountries);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.value3);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.value4);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.value5);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.value6);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.value7);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.value8);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.value9);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"autoDisplayFirst\", false)(\"options\", ctx.cities)(\"ngModel\", ctx.value10);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"options\", ctx.cities)(\"ngModel\", ctx.value11)(\"filter\", false);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.value12);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.AutoComplete, i5.Calendar, i6.Chips, i7.InputText, i8.Dropdown, i9.InputNumber, i10.InputMask, i11.InputTextarea, i12.MultiSelect],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["FloatLabelDemoComponent","constructor","countryService","breadcrumbService","setItems","label","cities","name","code","ngOnInit","getCountries","then","countries","searchCountry","event","filtered","query","i","length","country","toLowerCase","indexOf","push","filteredCountries","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/demo/view/floatlabeldemo.component.ts","/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/demo/view/floatlabeldemo.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {CountryService} from '../service/countryservice';\nimport {AppBreadcrumbService} from '../../app.breadcrumb.service';\n\n@Component({\n    templateUrl: './floatlabeldemo.component.html',\n})\nexport class FloatLabelDemoComponent implements OnInit {\n\n    countries: any[];\n\n    cities: any[];\n\n    filteredCountries: any[];\n\n    value1: any;\n\n    value2: any;\n\n    value3: any;\n\n    value4: any;\n\n    value5: any;\n\n    value6: any;\n\n    value7: any;\n\n    value8: any;\n\n    value9: any;\n\n    value10: any;\n\n    value11: any;\n\n    value12: any;\n\n    constructor(private countryService: CountryService, private breadcrumbService: AppBreadcrumbService) {\n        this.breadcrumbService.setItems([\n            {label: 'UI Kit'},\n            {label: 'Float Label'}\n        ]);\n        this.cities = [\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ];\n    }\n\n    ngOnInit() {\n        this.countryService.getCountries().then(countries => {\n            this.countries = countries;\n        });\n    }\n\n    searchCountry(event) {\n        // in a real application, make a request to a remote url with the query and\n        // return filtered results, for demo we filter at client side\n        const filtered: any[] = [];\n        const query = event.query;\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.countries.length; i++) {\n            const country = this.countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n                filtered.push(country);\n            }\n        }\n\n        this.filteredCountries = filtered;\n    }\n}\n","<div class=\"card\">\n    <h5>Float Label</h5>\n    <p>All input text components support floating labels by adding (<mark>.p-float-label</mark>) to wrapper class.</p>\n    <div class=\"grid p-fluid mt-3\">\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <input type=\"text\" id=\"inputtext\" pInputText [(ngModel)]=\"value1\">\n                <label for=\"inputtext\">InputText</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-autoComplete inputId=\"autocomplete\" [(ngModel)]=\"value2\" [suggestions]=\"filteredCountries\"\n                (completeMethod)=\"searchCountry($event)\" field=\"name\"></p-autoComplete>\n                <label for=\"autocomplete\">AutoComplete</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label p-input-icon-left\">\n                <i class=\"pi pi-search\"></i>\n                <input type=\"text\" id=\"lefticon\" pInputText [(ngModel)]=\"value3\">\n                <label for=\"lefticon\">Left Icon</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label p-input-icon-right\">\n                <input type=\"text\" id=\"righticon\" pInputText [(ngModel)]=\"value4\">\n                <label for=\"righticon\">Right Icon</label>\n                <i class=\"pi pi-spin pi-spinner\"></i>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-calendar inputId=\"calendar\" [(ngModel)]=\"value5\"></p-calendar>\n                <label for=\"calendar\">Calendar</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-chips inputId=\"chips\" [(ngModel)]=\"value6\"></p-chips>\n                <label for=\"chips\">Chips</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-inputMask inputId=\"inputmask\" mask=\"99/99/9999\" [(ngModel)]=\"value7\"></p-inputMask>\n                <label for=\"inputmask\">InputMask</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-inputNumber inputId=\"inputnumber\" [(ngModel)]=\"value8\"></p-inputNumber>\n                <label for=\"inputnumber\">InputNumber</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <div class=\"p-inputgroup\">\n                <span class=\"p-inputgroup-addon\">\n                    <i class=\"pi pi-user\"></i>\n                </span>\n                <span class=\"p-float-label\">\n                    <input type=\"text\" inputId=\"inputgroup\" pInputText [(ngModel)]=\"value9\"> \n                    <label for=\"inputgroup\">InputGroup</label>\n                </span>\n            </div>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-dropdown inputId=\"dropdown\" [autoDisplayFirst]=\"false\" [options]=\"cities\" [(ngModel)]=\"value10\" optionLabel=\"name\"></p-dropdown>\n                <label for=\"dropdown\">Dropdown</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <p-multiSelect inputId=\"multiselect\" [options]=\"cities\" [(ngModel)]=\"value11\" optionLabel=\"name\" [filter]=\"false\"></p-multiSelect>\n                <label for=\"multiselect\">MultiSelect</label>\n            </span>\n        </div>\n        <div class=\"field col-12 md:col-4\">\n            <span class=\"p-float-label\">\n                <textarea inputId=\"textarea\" rows=\"3\" cols=\"30\" [(ngModel)]=\"value12\" pInputTextarea></textarea>\n                <label for=\"textarea\">Textarea</label>\n            </span>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}