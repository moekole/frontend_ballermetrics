{"ast":null,"code":"import { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nfunction AccordionTab_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.header, \" \");\n  }\n}\nfunction AccordionTab_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AccordionTab_ng_content_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngIf\", \"hasHeaderFacet\"]);\n  }\n}\nfunction AccordionTab_ng_container_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AccordionTab_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AccordionTab_ng_container_10_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.contentTemplate);\n  }\n}\nconst _c0 = [\"*\", [[\"p-header\"]]];\nconst _c1 = function (a0) {\n  return {\n    transitionParams: a0\n  };\n};\nconst _c2 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\nconst _c3 = function (a1) {\n  return {\n    value: \"hidden\",\n    params: a1\n  };\n};\nconst _c4 = [\"*\", \"p-header\"];\nconst _c5 = [\"*\"];\nlet idx = 0;\nlet AccordionTab = /*#__PURE__*/(() => {\n  class AccordionTab {\n    constructor(accordion, changeDetector) {\n      this.changeDetector = changeDetector;\n      this.cache = true;\n      this.selectedChange = new EventEmitter();\n      this.transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n      this.iconPos = 'start';\n      this.id = `p-accordiontab-${idx++}`;\n      this.accordion = accordion;\n    }\n    get selected() {\n      return this._selected;\n    }\n    set selected(val) {\n      this._selected = val;\n      if (!this.loaded) {\n        if (this._selected && this.cache) {\n          this.loaded = true;\n        }\n        this.changeDetector.detectChanges();\n      }\n    }\n    get iconClass() {\n      if (this.iconPos === 'end') {\n        return 'p-accordion-toggle-icon-end';\n      } else {\n        return 'p-accordion-toggle-icon';\n      }\n    }\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'content':\n            this.contentTemplate = item.template;\n            break;\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n          default:\n            this.contentTemplate = item.template;\n            break;\n        }\n      });\n    }\n    toggle(event) {\n      if (this.disabled) {\n        return false;\n      }\n      let index = this.findTabIndex();\n      if (this.selected) {\n        this.selected = false;\n        this.accordion.onClose.emit({\n          originalEvent: event,\n          index: index\n        });\n      } else {\n        if (!this.accordion.multiple) {\n          for (var i = 0; i < this.accordion.tabs.length; i++) {\n            if (this.accordion.tabs[i].selected) {\n              this.accordion.tabs[i].selected = false;\n              this.accordion.tabs[i].selectedChange.emit(false);\n              this.accordion.tabs[i].changeDetector.markForCheck();\n            }\n          }\n        }\n        this.selected = true;\n        this.loaded = true;\n        this.accordion.onOpen.emit({\n          originalEvent: event,\n          index: index\n        });\n      }\n      this.selectedChange.emit(this.selected);\n      this.accordion.updateActiveIndex();\n      this.changeDetector.markForCheck();\n      event.preventDefault();\n    }\n    findTabIndex() {\n      let index = -1;\n      for (var i = 0; i < this.accordion.tabs.length; i++) {\n        if (this.accordion.tabs[i] == this) {\n          index = i;\n          break;\n        }\n      }\n      return index;\n    }\n    get hasHeaderFacet() {\n      return this.headerFacet && this.headerFacet.length > 0;\n    }\n    onKeydown(event) {\n      if (event.which === 32 || event.which === 13) {\n        this.toggle(event);\n        event.preventDefault();\n      }\n    }\n    ngOnDestroy() {\n      this.accordion.tabs.splice(this.findTabIndex(), 1);\n    }\n  }\n  AccordionTab.ɵfac = function AccordionTab_Factory(t) {\n    return new (t || AccordionTab)(i0.ɵɵdirectiveInject(forwardRef(() => Accordion)), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  AccordionTab.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AccordionTab,\n    selectors: [[\"p-accordionTab\"]],\n    contentQueries: function AccordionTab_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, Header, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerFacet = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      header: \"header\",\n      headerStyle: \"headerStyle\",\n      tabStyle: \"tabStyle\",\n      contentStyle: \"contentStyle\",\n      tabStyleClass: \"tabStyleClass\",\n      headerStyleClass: \"headerStyleClass\",\n      contentStyleClass: \"contentStyleClass\",\n      disabled: \"disabled\",\n      cache: \"cache\",\n      transitionOptions: \"transitionOptions\",\n      iconPos: \"iconPos\",\n      selected: \"selected\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\"\n    },\n    ngContentSelectors: _c4,\n    decls: 11,\n    vars: 36,\n    consts: [[1, \"p-accordion-tab\", 3, \"ngClass\", \"ngStyle\"], [1, \"p-accordion-header\"], [\"role\", \"tab\", 1, \"p-accordion-header-link\", 3, \"ngClass\", \"click\", \"keydown\"], [3, \"ngClass\"], [\"class\", \"p-accordion-header-text\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [\"role\", \"region\", 1, \"p-toggleable-content\"], [1, \"p-accordion-content\", 3, \"ngClass\", \"ngStyle\"], [1, \"p-accordion-header-text\"]],\n    template: function AccordionTab_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function AccordionTab_Template_a_click_2_listener($event) {\n          return ctx.toggle($event);\n        })(\"keydown\", function AccordionTab_Template_a_keydown_2_listener($event) {\n          return ctx.onKeydown($event);\n        });\n        i0.ɵɵelement(3, \"span\", 3);\n        i0.ɵɵtemplate(4, AccordionTab_span_4_Template, 2, 1, \"span\", 4);\n        i0.ɵɵtemplate(5, AccordionTab_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n        i0.ɵɵtemplate(6, AccordionTab_ng_content_6_Template, 1, 0, \"ng-content\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 7)(8, \"div\", 8);\n        i0.ɵɵprojection(9);\n        i0.ɵɵtemplate(10, AccordionTab_ng_container_10_Template, 2, 1, \"ng-container\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-accordion-tab-active\", ctx.selected);\n        i0.ɵɵproperty(\"ngClass\", ctx.tabStyleClass)(\"ngStyle\", ctx.tabStyle);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"p-highlight\", ctx.selected)(\"p-disabled\", ctx.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(ctx.headerStyle);\n        i0.ɵɵproperty(\"ngClass\", ctx.headerStyleClass);\n        i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0)(\"id\", ctx.id)(\"aria-controls\", ctx.id + \"-content\")(\"aria-expanded\", ctx.selected);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMap(ctx.iconClass);\n        i0.ɵɵproperty(\"ngClass\", ctx.selected ? ctx.accordion.collapseIcon : ctx.accordion.expandIcon);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasHeaderFacet);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.headerTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasHeaderFacet);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"@tabContent\", ctx.selected ? i0.ɵɵpureFunction1(30, _c2, i0.ɵɵpureFunction1(28, _c1, ctx.transitionOptions)) : i0.ɵɵpureFunction1(34, _c3, i0.ɵɵpureFunction1(32, _c1, ctx.transitionOptions)));\n        i0.ɵɵattribute(\"id\", ctx.id + \"-content\")(\"aria-hidden\", !ctx.selected)(\"aria-labelledby\", ctx.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.contentStyleClass)(\"ngStyle\", ctx.contentStyle);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.contentTemplate && (ctx.cache ? ctx.loaded : ctx.selected));\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle],\n    styles: [\".p-accordion-header-link{cursor:pointer;display:flex;align-items:center;-webkit-user-select:none;user-select:none;position:relative;text-decoration:none}.p-accordion-header-link:focus{z-index:1}.p-accordion-header-text{line-height:1}.p-accordion .p-toggleable-content{overflow:hidden}.p-accordion .p-accordion-tab-active>.p-toggleable-content:not(.ng-animating){overflow:inherit}.p-accordion-toggle-icon-end{order:1;margin-left:auto}.p-accordion-toggle-icon{order:0}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('tabContent', [state('hidden', style({\n        height: '0'\n      })), state('visible', style({\n        height: '*'\n      })), transition('visible <=> hidden', [animate('{{transitionParams}}')]), transition('void => *', animate(0))])]\n    },\n    changeDetection: 0\n  });\n  return AccordionTab;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet Accordion = /*#__PURE__*/(() => {\n  class Accordion {\n    constructor(el, changeDetector) {\n      this.el = el;\n      this.changeDetector = changeDetector;\n      this.onClose = new EventEmitter();\n      this.onOpen = new EventEmitter();\n      this.expandIcon = 'pi pi-fw pi-chevron-right';\n      this.collapseIcon = 'pi pi-fw pi-chevron-down';\n      this.activeIndexChange = new EventEmitter();\n      this.tabs = [];\n    }\n    ngAfterContentInit() {\n      this.initTabs();\n      this.tabListSubscription = this.tabList.changes.subscribe(_ => {\n        this.initTabs();\n      });\n    }\n    initTabs() {\n      this.tabs = this.tabList.toArray();\n      this.updateSelectionState();\n      this.changeDetector.markForCheck();\n    }\n    getBlockableElement() {\n      return this.el.nativeElement.children[0];\n    }\n    get activeIndex() {\n      return this._activeIndex;\n    }\n    set activeIndex(val) {\n      this._activeIndex = val;\n      if (this.preventActiveIndexPropagation) {\n        this.preventActiveIndexPropagation = false;\n        return;\n      }\n      this.updateSelectionState();\n    }\n    updateSelectionState() {\n      if (this.tabs && this.tabs.length && this._activeIndex != null) {\n        for (let i = 0; i < this.tabs.length; i++) {\n          let selected = this.multiple ? this._activeIndex.includes(i) : i === this._activeIndex;\n          let changed = selected !== this.tabs[i].selected;\n          if (changed) {\n            this.tabs[i].selected = selected;\n            this.tabs[i].selectedChange.emit(selected);\n            this.tabs[i].changeDetector.markForCheck();\n          }\n        }\n      }\n    }\n    updateActiveIndex() {\n      let index = this.multiple ? [] : null;\n      this.tabs.forEach((tab, i) => {\n        if (tab.selected) {\n          if (this.multiple) {\n            index.push(i);\n          } else {\n            index = i;\n            return;\n          }\n        }\n      });\n      this.preventActiveIndexPropagation = true;\n      this.activeIndexChange.emit(index);\n    }\n    ngOnDestroy() {\n      if (this.tabListSubscription) {\n        this.tabListSubscription.unsubscribe();\n      }\n    }\n  }\n  Accordion.ɵfac = function Accordion_Factory(t) {\n    return new (t || Accordion)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  Accordion.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Accordion,\n    selectors: [[\"p-accordion\"]],\n    contentQueries: function Accordion_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, AccordionTab, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabList = _t);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      multiple: \"multiple\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      expandIcon: \"expandIcon\",\n      collapseIcon: \"collapseIcon\",\n      activeIndex: \"activeIndex\"\n    },\n    outputs: {\n      onClose: \"onClose\",\n      onOpen: \"onOpen\",\n      activeIndexChange: \"activeIndexChange\"\n    },\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 4,\n    consts: [[\"role\", \"tablist\", 3, \"ngClass\", \"ngStyle\"]],\n    template: function Accordion_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", \"p-accordion p-component\")(\"ngStyle\", ctx.style);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgStyle],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return Accordion;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AccordionModule = /*#__PURE__*/(() => {\n  class AccordionModule {}\n  AccordionModule.ɵfac = function AccordionModule_Factory(t) {\n    return new (t || AccordionModule)();\n  };\n  AccordionModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AccordionModule\n  });\n  AccordionModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule]\n  });\n  return AccordionModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Accordion, AccordionModule, AccordionTab };\n//# sourceMappingURL=primeng-accordion.mjs.map\n//# sourceMappingURL=primeng-accordion.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}