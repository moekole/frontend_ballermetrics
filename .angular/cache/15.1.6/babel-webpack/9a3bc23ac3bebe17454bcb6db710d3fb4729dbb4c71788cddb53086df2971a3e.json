{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction Chip_div_0_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 6);\n    i0.ɵɵlistener(\"error\", function Chip_div_0_img_2_Template_img_error_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.imageError($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.image, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction Chip_div_0_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r8.icon);\n    i0.ɵɵproperty(\"ngClass\", \"p-chip-icon\");\n  }\n}\nfunction Chip_div_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Chip_div_0_ng_template_3_span_0_Template, 1, 3, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.icon);\n  }\n}\nfunction Chip_div_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.label);\n  }\n}\nfunction Chip_div_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function Chip_div_0_span_6_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.close($event));\n    })(\"keydown.enter\", function Chip_div_0_span_6_Template_span_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.close($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r5.removeIcon);\n    i0.ɵɵproperty(\"ngClass\", \"pi-chip-remove-icon\");\n  }\n}\nfunction Chip_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, Chip_div_0_img_2_Template, 1, 1, \"img\", 2);\n    i0.ɵɵtemplate(3, Chip_div_0_ng_template_3_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, Chip_div_0_div_5_Template, 2, 1, \"div\", 4);\n    i0.ɵɵtemplate(6, Chip_div_0_span_6_Template, 1, 3, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(4);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.containerClass())(\"ngStyle\", ctx_r0.style);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.image)(\"ngIfElse\", _r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.removable);\n  }\n}\nconst _c0 = [\"*\"];\nlet Chip = /*#__PURE__*/(() => {\n  class Chip {\n    constructor() {\n      this.removeIcon = 'pi pi-times-circle';\n      this.onRemove = new EventEmitter();\n      this.onImageError = new EventEmitter();\n      this.visible = true;\n    }\n    containerClass() {\n      return {\n        'p-chip p-component': true,\n        'p-chip-image': this.image != null\n      };\n    }\n    close(event) {\n      this.visible = false;\n      this.onRemove.emit(event);\n    }\n    imageError(event) {\n      this.onImageError.emit(event);\n    }\n  }\n  Chip.ɵfac = function Chip_Factory(t) {\n    return new (t || Chip)();\n  };\n  Chip.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Chip,\n    selectors: [[\"p-chip\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      label: \"label\",\n      icon: \"icon\",\n      image: \"image\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      removable: \"removable\",\n      removeIcon: \"removeIcon\"\n    },\n    outputs: {\n      onRemove: \"onRemove\",\n      onImageError: \"onImageError\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngClass\", \"class\", \"ngStyle\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"src\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"iconTemplate\", \"\"], [\"class\", \"p-chip-text\", 4, \"ngIf\"], [\"tabindex\", \"0\", 3, \"class\", \"ngClass\", \"click\", \"keydown.enter\", 4, \"ngIf\"], [3, \"src\", \"error\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"p-chip-text\"], [\"tabindex\", \"0\", 3, \"ngClass\", \"click\", \"keydown.enter\"]],\n    template: function Chip_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, Chip_div_0_Template, 7, 8, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.visible);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle],\n    styles: [\".p-chip{display:inline-flex;align-items:center}.p-chip-text,.p-chip-icon.pi{line-height:1.5}.pi-chip-remove-icon{line-height:1.5;cursor:pointer}.p-chip img{border-radius:50%}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return Chip;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ChipModule = /*#__PURE__*/(() => {\n  class ChipModule {}\n  ChipModule.ɵfac = function ChipModule_Factory(t) {\n    return new (t || ChipModule)();\n  };\n  ChipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ChipModule\n  });\n  ChipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return ChipModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Chip, ChipModule };\n//# sourceMappingURL=primeng-chip.mjs.map\n//# sourceMappingURL=primeng-chip.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}