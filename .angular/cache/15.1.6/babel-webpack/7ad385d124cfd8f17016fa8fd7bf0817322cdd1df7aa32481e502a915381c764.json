{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { Subject } from 'rxjs';\nfunction Terminal_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.welcomeMessage);\n  }\n}\nfunction Terminal_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 10);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const command_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.prompt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(command_r3.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(command_r3.response);\n  }\n}\nlet TerminalService = /*#__PURE__*/(() => {\n  class TerminalService {\n    constructor() {\n      this.commandSource = new Subject();\n      this.responseSource = new Subject();\n      this.commandHandler = this.commandSource.asObservable();\n      this.responseHandler = this.responseSource.asObservable();\n    }\n    sendCommand(command) {\n      if (command) {\n        this.commandSource.next(command);\n      }\n    }\n    sendResponse(response) {\n      if (response) {\n        this.responseSource.next(response);\n      }\n    }\n  }\n  TerminalService.ɵfac = function TerminalService_Factory(t) {\n    return new (t || TerminalService)();\n  };\n  TerminalService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TerminalService,\n    factory: TerminalService.ɵfac\n  });\n  return TerminalService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet Terminal = /*#__PURE__*/(() => {\n  class Terminal {\n    constructor(el, terminalService, cd) {\n      this.el = el;\n      this.terminalService = terminalService;\n      this.cd = cd;\n      this.commands = [];\n      this.subscription = terminalService.responseHandler.subscribe(response => {\n        this.commands[this.commands.length - 1].response = response;\n        this.commandProcessed = true;\n      });\n    }\n    ngAfterViewInit() {\n      this.container = DomHandler.find(this.el.nativeElement, '.p-terminal')[0];\n    }\n    ngAfterViewChecked() {\n      if (this.commandProcessed) {\n        this.container.scrollTop = this.container.scrollHeight;\n        this.commandProcessed = false;\n      }\n    }\n    set response(value) {\n      if (value) {\n        this.commands[this.commands.length - 1].response = value;\n        this.commandProcessed = true;\n      }\n    }\n    handleCommand(event) {\n      if (event.keyCode == 13) {\n        this.commands.push({\n          text: this.command\n        });\n        this.terminalService.sendCommand(this.command);\n        this.command = '';\n      }\n    }\n    focus(element) {\n      element.focus();\n    }\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }\n  Terminal.ɵfac = function Terminal_Factory(t) {\n    return new (t || Terminal)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(TerminalService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  Terminal.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Terminal,\n    selectors: [[\"p-terminal\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      welcomeMessage: \"welcomeMessage\",\n      prompt: \"prompt\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      response: \"response\"\n    },\n    decls: 9,\n    vars: 8,\n    consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [4, \"ngIf\"], [1, \"p-terminal-content\"], [4, \"ngFor\", \"ngForOf\"], [1, \"p-terminal-prompt-container\"], [1, \"p-terminal-content-prompt\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"autofocus\", \"\", 1, \"p-terminal-input\", 3, \"ngModel\", \"ngModelChange\", \"keydown\"], [\"in\", \"\"], [1, \"p-terminal-prompt\"], [1, \"p-terminal-command\"], [1, \"p-terminal-response\"]],\n    template: function Terminal_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function Terminal_Template_div_click_0_listener() {\n          i0.ɵɵrestoreView(_r4);\n          const _r2 = i0.ɵɵreference(8);\n          return i0.ɵɵresetView(ctx.focus(_r2));\n        });\n        i0.ɵɵtemplate(1, Terminal_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, Terminal_div_3_Template, 7, 3, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"span\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function Terminal_Template_input_ngModelChange_7_listener($event) {\n          return ctx.command = $event;\n        })(\"keydown\", function Terminal_Template_input_keydown_7_listener($event) {\n          return ctx.handleCommand($event);\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", \"p-terminal p-component\")(\"ngStyle\", ctx.style);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.welcomeMessage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.commands);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.prompt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.command);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgStyle, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\".p-terminal{height:18rem;overflow:auto}.p-terminal-prompt-container{display:flex;align-items:center}.p-terminal-input{flex:1 1 auto;border:0 none;background-color:transparent;color:inherit;padding:0;outline:0 none}.p-terminal-input::-ms-clear{display:none}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return Terminal;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TerminalModule = /*#__PURE__*/(() => {\n  class TerminalModule {}\n  TerminalModule.ɵfac = function TerminalModule_Factory(t) {\n    return new (t || TerminalModule)();\n  };\n  TerminalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TerminalModule\n  });\n  TerminalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, FormsModule]\n  });\n  return TerminalModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Terminal, TerminalModule, TerminalService };\n//# sourceMappingURL=primeng-terminal.mjs.map\n//# sourceMappingURL=primeng-terminal.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}