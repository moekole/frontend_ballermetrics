{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app.breadcrumb.service\";\nimport * as i2 from \"../service/app.config.service\";\nimport * as i3 from \"primeng/chart\";\nconst _c0 = function () {\n  return {\n    \"width\": \"50%\"\n  };\n};\nexport let ChartsDemoComponent = /*#__PURE__*/(() => {\n  class ChartsDemoComponent {\n    constructor(breadcrumbService, configService) {\n      this.breadcrumbService = breadcrumbService;\n      this.configService = configService;\n      this.breadcrumbService.setItems([{\n        label: 'UI Kit'\n      }, {\n        label: 'Charts'\n      }]);\n    }\n    ngOnInit() {\n      this.config = this.configService.config;\n      this.subscription = this.configService.configUpdate$.subscribe(config => {\n        this.config = config;\n        this.updateChartOptions();\n      });\n      this.lineData = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          label: 'First Dataset',\n          data: [65, 59, 80, 81, 56, 55, 40],\n          fill: false,\n          backgroundColor: 'rgb(255, 205, 86)',\n          borderColor: 'rgb(255, 205, 86)',\n          tension: .4\n        }, {\n          label: 'Second Dataset',\n          data: [28, 48, 40, 19, 86, 27, 90],\n          fill: false,\n          backgroundColor: 'rgb(75, 192, 192)',\n          borderColor: 'rgb(75, 192, 192)',\n          tension: .4\n        }]\n      };\n      this.barData = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          label: 'My First dataset',\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgb(255, 99, 132)',\n          data: [65, 59, 80, 81, 56, 55, 40]\n        }, {\n          label: 'My Second dataset',\n          backgroundColor: 'rgb(54, 162, 235)',\n          borderColor: 'rgb(54, 162, 235)',\n          data: [28, 48, 40, 19, 86, 27, 90]\n        }]\n      };\n      this.pieData = {\n        labels: ['A', 'B', 'C'],\n        datasets: [{\n          data: [300, 50, 100],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n        }]\n      };\n      this.polarData = {\n        datasets: [{\n          data: [11, 16, 7, 3, 14],\n          backgroundColor: [\"#FF6384\", \"#4BC0C0\", \"#FFCE56\", \"#E7E9ED\", \"#36A2EB\"],\n          label: 'My dataset'\n        }],\n        labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Blue\"]\n      };\n      this.radarData = {\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n        datasets: [{\n          label: 'My First dataset',\n          backgroundColor: 'rgba(179,181,198,0.2)',\n          borderColor: 'rgba(179,181,198,1)',\n          pointBackgroundColor: 'rgba(179,181,198,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(179,181,198,1)',\n          data: [65, 59, 90, 81, 56, 55, 40]\n        }, {\n          label: 'My Second dataset',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          pointBackgroundColor: 'rgba(255,99,132,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(255,99,132,1)',\n          data: [28, 48, 40, 19, 96, 27, 100]\n        }]\n      };\n      this.updateChartOptions();\n    }\n    updateChartOptions() {\n      if (this.config.dark) this.applyDarkTheme();else this.applyLightTheme();\n    }\n    applyLightTheme() {\n      this.lineOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              fontColor: '#A0A7B5'\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: '#A0A7B5'\n            },\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          },\n          y: {\n            ticks: {\n              color: '#A0A7B5'\n            },\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          }\n        }\n      };\n      this.barOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              fontColor: '#A0A7B5'\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: '#A0A7B5'\n            },\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          },\n          y: {\n            ticks: {\n              color: '#A0A7B5'\n            },\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          }\n        }\n      };\n      this.pieOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#495057'\n            }\n          }\n        }\n      };\n      this.polarOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#495057'\n            }\n          }\n        },\n        scales: {\n          r: {\n            grid: {\n              color: '#ebedef'\n            }\n          }\n        }\n      };\n      this.radarOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#495057'\n            }\n          }\n        },\n        scales: {\n          r: {\n            grid: {\n              color: '#ebedef'\n            }\n          }\n        }\n      };\n    }\n    applyDarkTheme() {\n      this.lineOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#ebedef'\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: '#ebedef'\n            },\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          },\n          y: {\n            ticks: {\n              color: '#ebedef'\n            },\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          }\n        }\n      };\n      this.barOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#ebedef'\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              color: '#ebedef'\n            },\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          },\n          y: {\n            ticks: {\n              color: '#ebedef'\n            },\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          }\n        }\n      };\n      this.pieOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#ebedef'\n            }\n          }\n        }\n      };\n      this.polarOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#ebedef'\n            }\n          }\n        },\n        scales: {\n          r: {\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          }\n        }\n      };\n      this.radarOptions = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#ebedef'\n            }\n          }\n        },\n        scales: {\n          r: {\n            grid: {\n              color: 'rgba(160, 167, 181, .3)'\n            }\n          }\n        }\n      };\n    }\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }\n  ChartsDemoComponent.ɵfac = function ChartsDemoComponent_Factory(t) {\n    return new (t || ChartsDemoComponent)(i0.ɵɵdirectiveInject(i1.AppBreadcrumbService), i0.ɵɵdirectiveInject(i2.ConfigService));\n  };\n  ChartsDemoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartsDemoComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 27,\n    vars: 27,\n    consts: [[1, \"grid\", \"p-fluid\"], [1, \"col-12\", \"lg:col-6\"], [1, \"card\"], [\"type\", \"line\", 3, \"data\", \"options\"], [1, \"card\", \"flex\", \"flex-column\", \"align-items-center\"], [1, \"text-left\", \"w-full\"], [\"type\", \"pie\", 3, \"data\", \"options\"], [\"type\", \"polarArea\", 3, \"data\", \"options\"], [\"type\", \"bar\", 3, \"data\", \"options\"], [\"type\", \"doughnut\", 3, \"data\", \"options\"], [\"type\", \"radar\", 3, \"data\", \"options\"]],\n    template: function ChartsDemoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n        i0.ɵɵtext(4, \"Linear Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"p-chart\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"h5\", 5);\n        i0.ɵɵtext(8, \"Pie Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"p-chart\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"h5\", 5);\n        i0.ɵɵtext(12, \"Polar Area Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"p-chart\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 1)(15, \"div\", 2)(16, \"h5\");\n        i0.ɵɵtext(17, \"Bar Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"p-chart\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 4)(20, \"h5\", 5);\n        i0.ɵɵtext(21, \"Doughnut Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"p-chart\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 4)(24, \"h5\", 5);\n        i0.ɵɵtext(25, \"Radar Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"p-chart\", 10);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c0));\n        i0.ɵɵproperty(\"data\", ctx.lineData)(\"options\", ctx.lineOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(23, _c0));\n        i0.ɵɵproperty(\"data\", ctx.pieData)(\"options\", ctx.pieOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c0));\n        i0.ɵɵproperty(\"data\", ctx.polarData)(\"options\", ctx.polarOptions);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"data\", ctx.barData)(\"options\", ctx.barOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(25, _c0));\n        i0.ɵɵproperty(\"data\", ctx.pieData)(\"options\", ctx.pieOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(26, _c0));\n        i0.ɵɵproperty(\"data\", ctx.radarData)(\"options\", ctx.radarOptions);\n      }\n    },\n    dependencies: [i3.UIChart],\n    encapsulation: 2\n  });\n  return ChartsDemoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}