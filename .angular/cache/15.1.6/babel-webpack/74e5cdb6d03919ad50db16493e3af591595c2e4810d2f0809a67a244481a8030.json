{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app.breadcrumb.service\";\nimport * as i2 from \"../service/app.config.service\";\nimport * as i3 from \"primeng/chart\";\nconst _c0 = function () {\n  return {\n    \"width\": \"50%\"\n  };\n};\nexport class ChartsDemoComponent {\n  constructor(breadcrumbService, configService) {\n    this.breadcrumbService = breadcrumbService;\n    this.configService = configService;\n    this.breadcrumbService.setItems([{\n      label: 'UI Kit'\n    }, {\n      label: 'Charts'\n    }]);\n  }\n  ngOnInit() {\n    this.config = this.configService.config;\n    this.subscription = this.configService.configUpdate$.subscribe(config => {\n      this.config = config;\n      this.updateChartOptions();\n    });\n    this.lineData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'First Dataset',\n        data: [65, 59, 80, 81, 56, 55, 40],\n        fill: false,\n        backgroundColor: 'rgb(255, 205, 86)',\n        borderColor: 'rgb(255, 205, 86)',\n        tension: .4\n      }, {\n        label: 'Second Dataset',\n        data: [28, 48, 40, 19, 86, 27, 90],\n        fill: false,\n        backgroundColor: 'rgb(75, 192, 192)',\n        borderColor: 'rgb(75, 192, 192)',\n        tension: .4\n      }]\n    };\n    this.barData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: [65, 59, 80, 81, 56, 55, 40]\n      }, {\n        label: 'My Second dataset',\n        backgroundColor: 'rgb(54, 162, 235)',\n        borderColor: 'rgb(54, 162, 235)',\n        data: [28, 48, 40, 19, 86, 27, 90]\n      }]\n    };\n    this.pieData = {\n      labels: ['A', 'B', 'C'],\n      datasets: [{\n        data: [300, 50, 100],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n      }]\n    };\n    this.polarData = {\n      datasets: [{\n        data: [11, 16, 7, 3, 14],\n        backgroundColor: [\"#FF6384\", \"#4BC0C0\", \"#FFCE56\", \"#E7E9ED\", \"#36A2EB\"],\n        label: 'My dataset'\n      }],\n      labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Blue\"]\n    };\n    this.radarData = {\n      labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: 'rgba(179,181,198,0.2)',\n        borderColor: 'rgba(179,181,198,1)',\n        pointBackgroundColor: 'rgba(179,181,198,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(179,181,198,1)',\n        data: [65, 59, 90, 81, 56, 55, 40]\n      }, {\n        label: 'My Second dataset',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        pointBackgroundColor: 'rgba(255,99,132,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(255,99,132,1)',\n        data: [28, 48, 40, 19, 96, 27, 100]\n      }]\n    };\n    this.updateChartOptions();\n  }\n  updateChartOptions() {\n    if (this.config.dark) this.applyDarkTheme();else this.applyLightTheme();\n  }\n  applyLightTheme() {\n    this.lineOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            fontColor: '#A0A7B5'\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: '#A0A7B5'\n          },\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        },\n        y: {\n          ticks: {\n            color: '#A0A7B5'\n          },\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        }\n      }\n    };\n    this.barOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            fontColor: '#A0A7B5'\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: '#A0A7B5'\n          },\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        },\n        y: {\n          ticks: {\n            color: '#A0A7B5'\n          },\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        }\n      }\n    };\n    this.pieOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#495057'\n          }\n        }\n      }\n    };\n    this.polarOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#495057'\n          }\n        }\n      },\n      scales: {\n        r: {\n          grid: {\n            color: '#ebedef'\n          }\n        }\n      }\n    };\n    this.radarOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#495057'\n          }\n        }\n      },\n      scales: {\n        r: {\n          grid: {\n            color: '#ebedef'\n          }\n        }\n      }\n    };\n  }\n  applyDarkTheme() {\n    this.lineOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#ebedef'\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: '#ebedef'\n          },\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        },\n        y: {\n          ticks: {\n            color: '#ebedef'\n          },\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        }\n      }\n    };\n    this.barOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#ebedef'\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: '#ebedef'\n          },\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        },\n        y: {\n          ticks: {\n            color: '#ebedef'\n          },\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        }\n      }\n    };\n    this.pieOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#ebedef'\n          }\n        }\n      }\n    };\n    this.polarOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#ebedef'\n          }\n        }\n      },\n      scales: {\n        r: {\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        }\n      }\n    };\n    this.radarOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: '#ebedef'\n          }\n        }\n      },\n      scales: {\n        r: {\n          grid: {\n            color: 'rgba(160, 167, 181, .3)'\n          }\n        }\n      }\n    };\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\nChartsDemoComponent.ɵfac = function ChartsDemoComponent_Factory(t) {\n  return new (t || ChartsDemoComponent)(i0.ɵɵdirectiveInject(i1.AppBreadcrumbService), i0.ɵɵdirectiveInject(i2.ConfigService));\n};\nChartsDemoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChartsDemoComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 27,\n  vars: 27,\n  consts: [[1, \"grid\", \"p-fluid\"], [1, \"col-12\", \"lg:col-6\"], [1, \"card\"], [\"type\", \"line\", 3, \"data\", \"options\"], [1, \"card\", \"flex\", \"flex-column\", \"align-items-center\"], [1, \"text-left\", \"w-full\"], [\"type\", \"pie\", 3, \"data\", \"options\"], [\"type\", \"polarArea\", 3, \"data\", \"options\"], [\"type\", \"bar\", 3, \"data\", \"options\"], [\"type\", \"doughnut\", 3, \"data\", \"options\"], [\"type\", \"radar\", 3, \"data\", \"options\"]],\n  template: function ChartsDemoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n      i0.ɵɵtext(4, \"Linear Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"p-chart\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"h5\", 5);\n      i0.ɵɵtext(8, \"Pie Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"p-chart\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"h5\", 5);\n      i0.ɵɵtext(12, \"Polar Area Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"p-chart\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 1)(15, \"div\", 2)(16, \"h5\");\n      i0.ɵɵtext(17, \"Bar Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"p-chart\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"h5\", 5);\n      i0.ɵɵtext(21, \"Doughnut Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"p-chart\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"h5\", 5);\n      i0.ɵɵtext(25, \"Radar Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"p-chart\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(22, _c0));\n      i0.ɵɵproperty(\"data\", ctx.lineData)(\"options\", ctx.lineOptions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(23, _c0));\n      i0.ɵɵproperty(\"data\", ctx.pieData)(\"options\", ctx.pieOptions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(24, _c0));\n      i0.ɵɵproperty(\"data\", ctx.polarData)(\"options\", ctx.polarOptions);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"data\", ctx.barData)(\"options\", ctx.barOptions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(25, _c0));\n      i0.ɵɵproperty(\"data\", ctx.pieData)(\"options\", ctx.pieOptions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(26, _c0));\n      i0.ɵɵproperty(\"data\", ctx.radarData)(\"options\", ctx.radarOptions);\n    }\n  },\n  dependencies: [i3.UIChart],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["ChartsDemoComponent","constructor","breadcrumbService","configService","setItems","label","ngOnInit","config","subscription","configUpdate$","subscribe","updateChartOptions","lineData","labels","datasets","data","fill","backgroundColor","borderColor","tension","barData","pieData","hoverBackgroundColor","polarData","radarData","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","dark","applyDarkTheme","applyLightTheme","lineOptions","plugins","legend","fontColor","scales","x","ticks","color","grid","y","barOptions","pieOptions","polarOptions","r","radarOptions","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/demo/view/chartsdemo.component.ts","/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/demo/view/chartsdemo.component.html"],"sourcesContent":["import {Component, OnInit, OnDestroy} from '@angular/core';\nimport {AppBreadcrumbService} from '../../app.breadcrumb.service';\nimport {Subscription} from 'rxjs';\nimport {AppConfig} from '../domain/appconfig';\nimport {ConfigService} from '../service/app.config.service';\n\n@Component({\n    templateUrl: './chartsdemo.component.html'\n})\nexport class ChartsDemoComponent implements OnInit, OnDestroy {\n\n    lineData: any;\n\n    barData: any;\n\n    pieData: any;\n\n    polarData: any;\n\n    radarData: any;\n\n    lineOptions: any;\n\n    barOptions: any;\n\n    pieOptions: any;\n\n    polarOptions: any;\n\n    radarOptions: any;\n\n    config: AppConfig;\n\n    subscription: Subscription;\n\n    constructor(private breadcrumbService: AppBreadcrumbService, public configService: ConfigService) {\n        this.breadcrumbService.setItems([\n            {label: 'UI Kit'},\n            {label: 'Charts'}\n        ]);\n    }\n\n\n    ngOnInit() {\n        this.config = this.configService.config;\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\n            this.config = config;\n            this.updateChartOptions();\n        });\n\n        this.lineData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40],\n                    fill: false,\n                    backgroundColor: 'rgb(255, 205, 86)',\n                    borderColor: 'rgb(255, 205, 86)',\n                    tension: .4\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90],\n                    fill: false,\n                    backgroundColor: 'rgb(75, 192, 192)',\n                    borderColor: 'rgb(75, 192, 192)',\n                    tension: .4\n                }\n            ]\n        };\n\n        this.barData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: [65, 59, 80, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: 'rgb(54, 162, 235)',\n                    borderColor: 'rgb(54, 162, 235)',\n                    data: [28, 48, 40, 19, 86, 27, 90]\n                }\n            ]\n        };\n\n        this.pieData = {\n            labels: ['A', 'B', 'C'],\n            datasets: [\n                {\n                    data: [300, 50, 100],\n                    backgroundColor: [\n                        \"#FF6384\",\n                        \"#36A2EB\",\n                        \"#FFCE56\"\n                    ],\n                    hoverBackgroundColor: [\n                        \"#FF6384\",\n                        \"#36A2EB\",\n                        \"#FFCE56\"\n                    ]\n                }\n            ]\n        };\n\n        this.polarData = {\n            datasets: [{\n                data: [\n                    11,\n                    16,\n                    7,\n                    3,\n                    14\n                ],\n                backgroundColor: [\n                    \"#FF6384\",\n                    \"#4BC0C0\",\n                    \"#FFCE56\",\n                    \"#E7E9ED\",\n                    \"#36A2EB\"\n                ],\n                label: 'My dataset'\n            }],\n            labels: [\n                \"Red\",\n                \"Green\",\n                \"Yellow\",\n                \"Grey\",\n                \"Blue\"\n            ]\n        };\n\n        this.radarData = {\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(179,181,198,0.2)',\n                    borderColor: 'rgba(179,181,198,1)',\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\n                    data: [65, 59, 90, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: 'rgba(255,99,132,0.2)',\n                    borderColor: 'rgba(255,99,132,1)',\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\n                    data: [28, 48, 40, 19, 96, 27, 100]\n                }\n            ]\n        };\n\n        this.updateChartOptions();\n    }\n\n    updateChartOptions() {\n        if (this.config.dark)\n            this.applyDarkTheme();\n        else\n            this.applyLightTheme();\n    }\n\n    applyLightTheme() {\n        this.lineOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        fontColor: '#A0A7B5'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#A0A7B5'\n                    },\n                    grid: {\n                        color:  'rgba(160, 167, 181, .3)',\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#A0A7B5'\n                    },\n                    grid: {\n                        color:  'rgba(160, 167, 181, .3)',\n                    }\n                },\n            }\n        };\n\n        this.barOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        fontColor: '#A0A7B5'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#A0A7B5'\n                    },\n                    grid: {\n                        color:  'rgba(160, 167, 181, .3)',\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#A0A7B5'\n                    },\n                    grid: {\n                        color:  'rgba(160, 167, 181, .3)',\n                    }\n                },\n            }\n        };\n\n        this.pieOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            }\n        };\n\n        this.polarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        this.radarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#495057'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n    }\n\n    applyDarkTheme() {\n        this.lineOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color:  'rgba(160, 167, 181, .3)',\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color:  'rgba(160, 167, 181, .3)',\n                    }\n                },\n            }\n        };\n\n        this.barOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color:  'rgba(160, 167, 181, .3)',\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: '#ebedef'\n                    },\n                    grid: {\n                        color:  'rgba(160, 167, 181, .3)',\n                    }\n                },\n            }\n        };\n\n        this.pieOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            }\n        };\n\n        this.polarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: 'rgba(160, 167, 181, .3)'\n                    }\n                }\n            }\n        };\n\n        this.radarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: '#ebedef'\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: 'rgba(160, 167, 181, .3)'\n                    }\n                }\n            }\n        };\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n","<div class=\"grid p-fluid\">\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>Linear Chart</h5>\n            <p-chart type=\"line\" [data]=\"lineData\" [options]=\"lineOptions\" [style]=\"{'width': '50%'}\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Pie Chart</h5>\n            <p-chart type=\"pie\" [data]=\"pieData\" [options]=\"pieOptions\" [style]=\"{'width': '50%'}\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Polar Area Chart</h5>\n            <p-chart type=\"polarArea\" [data]=\"polarData\" [options]=\"polarOptions\" [style]=\"{'width': '50%'}\"></p-chart>\n        </div>\n    </div>\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>Bar Chart</h5>\n            <p-chart type=\"bar\" [data]=\"barData\" [options]=\"barOptions\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Doughnut Chart</h5>\n            <p-chart type=\"doughnut\" [data]=\"pieData\" [options]=\"pieOptions\" [style]=\"{'width': '50%'}\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Radar Chart</h5>\n            <p-chart type=\"radar\" [data]=\"radarData\" [options]=\"radarOptions\" [style]=\"{'width': '50%'}\"></p-chart>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}