{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nconst _c0 = [\"container\"];\nfunction Splitter_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Splitter_ng_template_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mousedown\", function Splitter_ng_template_2_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onGutterMouseDown($event, i_r3));\n    })(\"touchstart\", function Splitter_ng_template_2_div_2_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onGutterTouchStart($event, i_r3));\n    });\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r5.gutterStyle());\n  }\n}\nfunction Splitter_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtemplate(1, Splitter_ng_template_2_ng_container_1_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, Splitter_ng_template_2_div_2_Template, 2, 1, \"div\", 4);\n  }\n  if (rf & 2) {\n    const panel_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelContainerClass())(\"ngStyle\", ctx_r1.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r3 !== ctx_r1.panels.length - 1);\n  }\n}\nclass Splitter {\n  constructor(cd, el) {\n    this.cd = cd;\n    this.el = el;\n    this.stateStorage = 'session';\n    this.stateKey = null;\n    this.layout = 'horizontal';\n    this.gutterSize = 4;\n    this.minSizes = [];\n    this.onResizeEnd = new EventEmitter();\n    this.onResizeStart = new EventEmitter();\n    this.nested = false;\n    this.panels = [];\n    this.dragging = false;\n    this.mouseMoveListener = null;\n    this.mouseUpListener = null;\n    this.touchMoveListener = null;\n    this.touchEndListener = null;\n    this.size = null;\n    this.gutterElement = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.nextPanelSize = null;\n    this.prevPanelSize = null;\n    this._panelSizes = [];\n    this.prevPanelIndex = null;\n  }\n  get panelSizes() {\n    return this._panelSizes;\n  }\n  set panelSizes(val) {\n    this._panelSizes = val;\n    if (this.el && this.el.nativeElement && this.panels.length > 0) {\n      let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n      let _panelSizes = [];\n      this.panels.map((panel, i) => {\n        let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n        let panelSize = panelInitialSize || 100 / this.panels.length;\n        _panelSizes[i] = panelSize;\n        children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n    }\n  }\n  ngOnInit() {\n    this.nested = this.isNested();\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'panel':\n          this.panels.push(item.template);\n          break;\n        default:\n          this.panels.push(item.template);\n          break;\n      }\n    });\n  }\n  ngAfterViewInit() {\n    if (this.panels && this.panels.length) {\n      let initialized = false;\n      if (this.isStateful()) {\n        initialized = this.restoreState();\n      }\n      if (!initialized) {\n        let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n        let _panelSizes = [];\n        this.panels.map((panel, i) => {\n          let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n          let panelSize = panelInitialSize || 100 / this.panels.length;\n          _panelSizes[i] = panelSize;\n          children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n        });\n        this._panelSizes = _panelSizes;\n      }\n    }\n  }\n  resizeStart(event, index) {\n    this.gutterElement = event.currentTarget;\n    this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n    this.dragging = true;\n    this.startPos = this.horizontal() ? event.pageX || event.changedTouches[0].pageX : event.pageY || event.changedTouches[0].pageY;\n    this.prevPanelElement = this.gutterElement.previousElementSibling;\n    this.nextPanelElement = this.gutterElement.nextElementSibling;\n    this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\n    this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\n    this.prevPanelIndex = index;\n    DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.onResizeStart.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n  }\n  onResize(event) {\n    let newPos;\n    if (this.horizontal()) newPos = event.pageX * 100 / this.size - this.startPos * 100 / this.size;else newPos = event.pageY * 100 / this.size - this.startPos * 100 / this.size;\n    let newPrevPanelSize = this.prevPanelSize + newPos;\n    let newNextPanelSize = this.nextPanelSize - newPos;\n    if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n      this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n      this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n    }\n  }\n  resizeEnd(event) {\n    if (this.isStateful()) {\n      this.saveState();\n    }\n    this.onResizeEnd.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n    DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.clear();\n  }\n  onGutterMouseDown(event, index) {\n    this.resizeStart(event, index);\n    this.bindMouseListeners();\n  }\n  onGutterTouchStart(event, index) {\n    if (event.cancelable) {\n      this.resizeStart(event, index);\n      this.bindTouchListeners();\n      event.preventDefault();\n    }\n  }\n  onGutterTouchEnd(event) {\n    this.resizeEnd(event);\n    this.unbindTouchListeners();\n    if (event.cancelable) event.preventDefault();\n  }\n  validateResize(newPrevPanelSize, newNextPanelSize) {\n    if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n      return false;\n    }\n    if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n      return false;\n    }\n    return true;\n  }\n  bindMouseListeners() {\n    if (!this.mouseMoveListener) {\n      this.mouseMoveListener = event => this.onResize(event);\n      document.addEventListener('mousemove', this.mouseMoveListener);\n    }\n    if (!this.mouseUpListener) {\n      this.mouseUpListener = event => {\n        this.resizeEnd(event);\n        this.unbindMouseListeners();\n      };\n      document.addEventListener('mouseup', this.mouseUpListener);\n    }\n  }\n  bindTouchListeners() {\n    if (!this.touchMoveListener) {\n      this.touchMoveListener = event => this.onResize(event.changedTouches[0]);\n      document.addEventListener('touchmove', this.touchMoveListener);\n    }\n    if (!this.touchEndListener) {\n      this.touchEndListener = event => {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n      };\n      document.addEventListener('touchend', this.touchEndListener);\n    }\n  }\n  unbindMouseListeners() {\n    if (this.mouseMoveListener) {\n      document.removeEventListener('mousemove', this.mouseMoveListener);\n      this.mouseMoveListener = null;\n    }\n    if (this.mouseUpListener) {\n      document.removeEventListener('mouseup', this.mouseUpListener);\n      this.mouseUpListener = null;\n    }\n  }\n  unbindTouchListeners() {\n    if (this.touchMoveListener) {\n      document.removeEventListener('touchmove', this.touchMoveListener);\n      this.touchMoveListener = null;\n    }\n    if (this.touchEndListener) {\n      document.removeEventListener('touchend', this.touchEndListener);\n      this.touchEndListener = null;\n    }\n  }\n  clear() {\n    this.dragging = false;\n    this.size = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.prevPanelSize = null;\n    this.nextPanelSize = null;\n    this.gutterElement = null;\n    this.prevPanelIndex = null;\n  }\n  isNested() {\n    if (this.el.nativeElement) {\n      let parent = this.el.nativeElement.parentElement;\n      while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n        parent = parent.parentElement;\n      }\n      return parent !== null;\n    } else {\n      return false;\n    }\n  }\n  isStateful() {\n    return this.stateKey != null;\n  }\n  getStorage() {\n    switch (this.stateStorage) {\n      case 'local':\n        return window.localStorage;\n      case 'session':\n        return window.sessionStorage;\n      default:\n        throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n    }\n  }\n  saveState() {\n    this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n  }\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n    if (stateString) {\n      this._panelSizes = JSON.parse(stateString);\n      let children = [...this.containerViewChild.nativeElement.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\n      children.forEach((child, i) => {\n        child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n      return true;\n    }\n    return false;\n  }\n  containerClass() {\n    return {\n      'p-splitter p-component': true,\n      'p-splitter-horizontal': this.layout === 'horizontal',\n      'p-splitter-vertical': this.layout === 'vertical'\n    };\n  }\n  panelContainerClass() {\n    return {\n      'p-splitter-panel': true,\n      'p-splitter-panel-nested': true\n    };\n  }\n  gutterStyle() {\n    if (this.horizontal()) return {\n      width: this.gutterSize + 'px'\n    };else return {\n      height: this.gutterSize + 'px'\n    };\n  }\n  horizontal() {\n    return this.layout === 'horizontal';\n  }\n}\nSplitter.ɵfac = function Splitter_Factory(t) {\n  return new (t || Splitter)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nSplitter.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Splitter,\n  selectors: [[\"p-splitter\"]],\n  contentQueries: function Splitter_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Splitter_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  hostVars: 2,\n  hostBindings: function Splitter_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-splitter-panel-nested\", ctx.nested);\n    }\n  },\n  inputs: {\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    stateStorage: \"stateStorage\",\n    stateKey: \"stateKey\",\n    layout: \"layout\",\n    gutterSize: \"gutterSize\",\n    minSizes: \"minSizes\",\n    panelSizes: \"panelSizes\"\n  },\n  outputs: {\n    onResizeEnd: \"onResizeEnd\",\n    onResizeStart: \"onResizeStart\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\", 4, \"ngIf\"], [1, \"p-splitter-gutter\", 3, \"ngStyle\", \"mousedown\", \"touchstart\"], [1, \"p-splitter-gutter-handle\"]],\n  template: function Splitter_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, Splitter_ng_template_2_Template, 3, 6, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle],\n  styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Splitter, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitter',\n      template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== panels.length - 1\" [ngStyle]=\"gutterStyle()\" (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-element',\n        '[class.p-splitter-panel-nested]': 'nested'\n      },\n      styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    gutterSize: [{\n      type: Input\n    }],\n    minSizes: [{\n      type: Input\n    }],\n    onResizeEnd: [{\n      type: Output\n    }],\n    onResizeStart: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container', {\n        static: false\n      }]\n    }],\n    panelSizes: [{\n      type: Input\n    }]\n  });\n})();\nclass SplitterModule {}\nSplitterModule.ɵfac = function SplitterModule_Factory(t) {\n  return new (t || SplitterModule)();\n};\nSplitterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SplitterModule\n});\nSplitterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, SharedModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Splitter, SharedModule],\n      declarations: [Splitter]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterModule };\n//# sourceMappingURL=primeng-splitter.mjs.map","map":{"version":3,"names":["i0","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","ContentChildren","ViewChild","NgModule","i1","CommonModule","DomHandler","PrimeTemplate","SharedModule","Splitter","constructor","cd","el","stateStorage","stateKey","layout","gutterSize","minSizes","onResizeEnd","onResizeStart","nested","panels","dragging","mouseMoveListener","mouseUpListener","touchMoveListener","touchEndListener","size","gutterElement","startPos","prevPanelElement","nextPanelElement","nextPanelSize","prevPanelSize","_panelSizes","prevPanelIndex","panelSizes","val","nativeElement","length","children","filter","child","hasClass","map","panel","i","panelInitialSize","panelSize","style","flexBasis","ngOnInit","isNested","ngAfterContentInit","templates","forEach","item","getType","push","template","ngAfterViewInit","initialized","isStateful","restoreState","resizeStart","event","index","currentTarget","horizontal","getWidth","containerViewChild","getHeight","pageX","changedTouches","pageY","previousElementSibling","nextElementSibling","getOuterWidth","getOuterHeight","addClass","emit","originalEvent","sizes","onResize","newPos","newPrevPanelSize","newNextPanelSize","validateResize","resizeEnd","saveState","removeClass","clear","onGutterMouseDown","bindMouseListeners","onGutterTouchStart","cancelable","bindTouchListeners","preventDefault","onGutterTouchEnd","unbindTouchListeners","document","addEventListener","unbindMouseListeners","removeEventListener","parent","parentElement","getStorage","window","localStorage","sessionStorage","Error","setItem","JSON","stringify","storage","stateString","getItem","parse","containerClass","panelContainerClass","gutterStyle","width","height","ɵfac","ChangeDetectorRef","ElementRef","ɵcmp","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","type","args","selector","encapsulation","None","changeDetection","OnPush","host","class","styles","styleClass","panelStyleClass","panelStyle","static","SplitterModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/node_modules/primeng/fesm2020/primeng-splitter.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\n\nclass Splitter {\n    constructor(cd, el) {\n        this.cd = cd;\n        this.el = el;\n        this.stateStorage = 'session';\n        this.stateKey = null;\n        this.layout = 'horizontal';\n        this.gutterSize = 4;\n        this.minSizes = [];\n        this.onResizeEnd = new EventEmitter();\n        this.onResizeStart = new EventEmitter();\n        this.nested = false;\n        this.panels = [];\n        this.dragging = false;\n        this.mouseMoveListener = null;\n        this.mouseUpListener = null;\n        this.touchMoveListener = null;\n        this.touchEndListener = null;\n        this.size = null;\n        this.gutterElement = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.nextPanelSize = null;\n        this.prevPanelSize = null;\n        this._panelSizes = [];\n        this.prevPanelIndex = null;\n    }\n    get panelSizes() {\n        return this._panelSizes;\n    }\n    set panelSizes(val) {\n        this._panelSizes = val;\n        if (this.el && this.el.nativeElement && this.panels.length > 0) {\n            let children = [...this.el.nativeElement.children[0].children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n            let _panelSizes = [];\n            this.panels.map((panel, i) => {\n                let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                let panelSize = panelInitialSize || 100 / this.panels.length;\n                _panelSizes[i] = panelSize;\n                children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n        }\n    }\n    ngOnInit() {\n        this.nested = this.isNested();\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'panel':\n                    this.panels.push(item.template);\n                    break;\n                default:\n                    this.panels.push(item.template);\n                    break;\n            }\n        });\n    }\n    ngAfterViewInit() {\n        if (this.panels && this.panels.length) {\n            let initialized = false;\n            if (this.isStateful()) {\n                initialized = this.restoreState();\n            }\n            if (!initialized) {\n                let children = [...this.el.nativeElement.children[0].children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n                let _panelSizes = [];\n                this.panels.map((panel, i) => {\n                    let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                    let panelSize = panelInitialSize || 100 / this.panels.length;\n                    _panelSizes[i] = panelSize;\n                    children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n                });\n                this._panelSizes = _panelSizes;\n            }\n        }\n    }\n    resizeStart(event, index) {\n        this.gutterElement = event.currentTarget;\n        this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\n        this.dragging = true;\n        this.startPos = this.horizontal() ? event.pageX || event.changedTouches[0].pageX : event.pageY || event.changedTouches[0].pageY;\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\n        this.prevPanelSize = (100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true) : DomHandler.getOuterHeight(this.prevPanelElement, true))) / this.size;\n        this.nextPanelSize = (100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true) : DomHandler.getOuterHeight(this.nextPanelElement, true))) / this.size;\n        this.prevPanelIndex = index;\n        DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.onResizeStart.emit({ originalEvent: event, sizes: this._panelSizes });\n    }\n    onResize(event) {\n        let newPos;\n        if (this.horizontal())\n            newPos = (event.pageX * 100) / this.size - (this.startPos * 100) / this.size;\n        else\n            newPos = (event.pageY * 100) / this.size - (this.startPos * 100) / this.size;\n        let newPrevPanelSize = this.prevPanelSize + newPos;\n        let newNextPanelSize = this.nextPanelSize - newPos;\n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n            this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n        }\n    }\n    resizeEnd(event) {\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.onResizeEnd.emit({ originalEvent: event, sizes: this._panelSizes });\n        DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.clear();\n    }\n    onGutterMouseDown(event, index) {\n        this.resizeStart(event, index);\n        this.bindMouseListeners();\n    }\n    onGutterTouchStart(event, index) {\n        if (event.cancelable) {\n            this.resizeStart(event, index);\n            this.bindTouchListeners();\n            event.preventDefault();\n        }\n    }\n    onGutterTouchEnd(event) {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n        if (event.cancelable)\n            event.preventDefault();\n    }\n    validateResize(newPrevPanelSize, newNextPanelSize) {\n        if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n            return false;\n        }\n        if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n            return false;\n        }\n        return true;\n    }\n    bindMouseListeners() {\n        if (!this.mouseMoveListener) {\n            this.mouseMoveListener = (event) => this.onResize(event);\n            document.addEventListener('mousemove', this.mouseMoveListener);\n        }\n        if (!this.mouseUpListener) {\n            this.mouseUpListener = (event) => {\n                this.resizeEnd(event);\n                this.unbindMouseListeners();\n            };\n            document.addEventListener('mouseup', this.mouseUpListener);\n        }\n    }\n    bindTouchListeners() {\n        if (!this.touchMoveListener) {\n            this.touchMoveListener = (event) => this.onResize(event.changedTouches[0]);\n            document.addEventListener('touchmove', this.touchMoveListener);\n        }\n        if (!this.touchEndListener) {\n            this.touchEndListener = (event) => {\n                this.resizeEnd(event);\n                this.unbindTouchListeners();\n            };\n            document.addEventListener('touchend', this.touchEndListener);\n        }\n    }\n    unbindMouseListeners() {\n        if (this.mouseMoveListener) {\n            document.removeEventListener('mousemove', this.mouseMoveListener);\n            this.mouseMoveListener = null;\n        }\n        if (this.mouseUpListener) {\n            document.removeEventListener('mouseup', this.mouseUpListener);\n            this.mouseUpListener = null;\n        }\n    }\n    unbindTouchListeners() {\n        if (this.touchMoveListener) {\n            document.removeEventListener('touchmove', this.touchMoveListener);\n            this.touchMoveListener = null;\n        }\n        if (this.touchEndListener) {\n            document.removeEventListener('touchend', this.touchEndListener);\n            this.touchEndListener = null;\n        }\n    }\n    clear() {\n        this.dragging = false;\n        this.size = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.prevPanelSize = null;\n        this.nextPanelSize = null;\n        this.gutterElement = null;\n        this.prevPanelIndex = null;\n    }\n    isNested() {\n        if (this.el.nativeElement) {\n            let parent = this.el.nativeElement.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\n                parent = parent.parentElement;\n            }\n            return parent !== null;\n        }\n        else {\n            return false;\n        }\n    }\n    isStateful() {\n        return this.stateKey != null;\n    }\n    getStorage() {\n        switch (this.stateStorage) {\n            case 'local':\n                return window.localStorage;\n            case 'session':\n                return window.sessionStorage;\n            default:\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n    }\n    saveState() {\n        this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n    }\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            this._panelSizes = JSON.parse(stateString);\n            let children = [...this.containerViewChild.nativeElement.children].filter((child) => DomHandler.hasClass(child, 'p-splitter-panel'));\n            children.forEach((child, i) => {\n                child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n            return true;\n        }\n        return false;\n    }\n    containerClass() {\n        return {\n            'p-splitter p-component': true,\n            'p-splitter-horizontal': this.layout === 'horizontal',\n            'p-splitter-vertical': this.layout === 'vertical'\n        };\n    }\n    panelContainerClass() {\n        return {\n            'p-splitter-panel': true,\n            'p-splitter-panel-nested': true\n        };\n    }\n    gutterStyle() {\n        if (this.horizontal())\n            return { width: this.gutterSize + 'px' };\n        else\n            return { height: this.gutterSize + 'px' };\n    }\n    horizontal() {\n        return this.layout === 'horizontal';\n    }\n}\nSplitter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: Splitter, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nSplitter.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.1.0\", type: Splitter, selector: \"p-splitter\", inputs: { styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", style: \"style\", panelStyle: \"panelStyle\", stateStorage: \"stateStorage\", stateKey: \"stateKey\", layout: \"layout\", gutterSize: \"gutterSize\", minSizes: \"minSizes\", panelSizes: \"panelSizes\" }, outputs: { onResizeEnd: \"onResizeEnd\", onResizeStart: \"onResizeStart\" }, host: { properties: { \"class.p-splitter-panel-nested\": \"nested\" }, classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }], ngImport: i0, template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== panels.length - 1\" [ngStyle]=\"gutterStyle()\" (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `, isInline: true, styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: Splitter, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-splitter', template: `\n        <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div class=\"p-splitter-gutter\" *ngIf=\"i !== panels.length - 1\" [ngStyle]=\"gutterStyle()\" (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n                    <div class=\"p-splitter-gutter-handle\"></div>\n                </div>\n            </ng-template>\n        </div>\n    `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        class: 'p-element',\n                        '[class.p-splitter-panel-nested]': 'nested'\n                    }, styles: [\".p-splitter{display:flex;flex-wrap:nowrap}.p-splitter-vertical{flex-direction:column}.p-splitter-panel{flex-grow:1}.p-splitter-panel-nested{display:flex}.p-splitter-panel p-splitter{flex-grow:1}.p-splitter-panel .p-splitter{flex-grow:1;border:0 none}.p-splitter-gutter{flex-grow:0;flex-shrink:0;display:flex;align-items:center;justify-content:center;cursor:col-resize}.p-splitter-horizontal.p-splitter-resizing{cursor:col-resize;-webkit-user-select:none;user-select:none}.p-splitter-horizontal>.p-splitter-gutter>.p-splitter-gutter-handle{height:24px;width:100%}.p-splitter-horizontal>.p-splitter-gutter{cursor:col-resize}.p-splitter-vertical.p-splitter-resizing{cursor:row-resize;-webkit-user-select:none;user-select:none}.p-splitter-vertical>.p-splitter-gutter{cursor:row-resize}.p-splitter-vertical>.p-splitter-gutter>.p-splitter-gutter-handle{width:24px;height:100%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], stateStorage: [{\n                type: Input\n            }], stateKey: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input\n            }], minSizes: [{\n                type: Input\n            }], onResizeEnd: [{\n                type: Output\n            }], onResizeStart: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container', { static: false }]\n            }], panelSizes: [{\n                type: Input\n            }] } });\nclass SplitterModule {\n}\nSplitterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: SplitterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSplitterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0\", ngImport: i0, type: SplitterModule, declarations: [Splitter], imports: [CommonModule], exports: [Splitter, SharedModule] });\nSplitterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: SplitterModule, imports: [CommonModule, SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: SplitterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Splitter, SharedModule],\n                    declarations: [Splitter]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterModule };\n//# sourceMappingURL=primeng-splitter.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}