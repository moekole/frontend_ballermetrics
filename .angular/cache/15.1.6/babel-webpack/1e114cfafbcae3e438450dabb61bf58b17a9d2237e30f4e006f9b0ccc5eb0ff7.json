{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.menu.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"./app.component\";\nfunction AppMainComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 6);\n  }\n}\nconst _c0 = function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n  return {\n    \"p-input-filled\": a0,\n    \"p-ripple-disabled\": a1,\n    \"layout-static\": a2,\n    \"layout-overlay\": a3,\n    \"layout-overlay-active\": a4,\n    \"layout-horizontal\": a5,\n    \"layout-static-active\": a6,\n    \"layout-mobile-active\": a7,\n    \"layout-rtl\": a8,\n    \"layout-rightpanel-active\": a9\n  };\n};\nexport class AppMainComponent {\n  constructor(renderer, menuService, primengConfig, app) {\n    this.renderer = renderer;\n    this.menuService = menuService;\n    this.primengConfig = primengConfig;\n    this.app = app;\n    this.menuHoverActive = false;\n    this.searchClick = false;\n    this.search = false;\n  }\n  ngAfterViewInit() {\n    // hides the horizontal submenus or top menu if outside is clicked\n    this.documentClickListener = this.renderer.listen('body', 'click', event => {\n      if (!this.topbarItemClick) {\n        this.activeTopbarItem = null;\n        this.topbarMenuActive = false;\n      }\n      if (!this.menuClick && this.isHorizontal()) {\n        this.menuService.reset();\n      }\n      if (this.configActive && !this.configClick) {\n        this.configActive = false;\n      }\n      if (!this.rightPanelClick) {\n        this.rightPanelActive = false;\n      }\n      if (!this.menuClick) {\n        if (this.overlayMenuActive) {\n          this.overlayMenuActive = false;\n        }\n        if (this.staticMenuMobileActive) {\n          this.staticMenuMobileActive = false;\n        }\n        this.menuHoverActive = false;\n        this.unblockBodyScroll();\n      }\n      if (!this.searchClick) {\n        this.search = false;\n      }\n      this.searchClick = false;\n      this.configClick = false;\n      this.topbarItemClick = false;\n      this.menuClick = false;\n      this.rightPanelClick = false;\n    });\n  }\n  onMenuButtonClick(event) {\n    this.rotateMenuButton = !this.rotateMenuButton;\n    this.topbarMenuActive = false;\n    this.menuClick = true;\n    if (this.app.menuMode === 'overlay' && !this.isMobile()) {\n      this.overlayMenuActive = !this.overlayMenuActive;\n    }\n    if (this.isDesktop()) {\n      this.staticMenuDesktopInactive = !this.staticMenuDesktopInactive;\n    } else {\n      this.staticMenuMobileActive = !this.staticMenuMobileActive;\n      if (this.staticMenuMobileActive) {\n        this.blockBodyScroll();\n      } else {\n        this.unblockBodyScroll();\n      }\n    }\n    event.preventDefault();\n  }\n  onMenuClick($event) {\n    this.menuClick = true;\n  }\n  onTopbarItemClick(event, item) {\n    this.topbarItemClick = true;\n    if (this.activeTopbarItem === item) {\n      this.activeTopbarItem = null;\n    } else {\n      this.activeTopbarItem = item;\n    }\n    if (item.className === 'search-item topbar-item') {\n      this.search = !this.search;\n      this.searchClick = !this.searchClick;\n    }\n    event.preventDefault();\n  }\n  onTopbarSubItemClick(event) {\n    event.preventDefault();\n  }\n  onRTLChange(event) {\n    this.app.isRTL = event.checked;\n  }\n  onRippleChange(event) {\n    this.app.ripple = event.checked;\n    this.primengConfig.ripple = event.checked;\n  }\n  onConfigClick(event) {\n    this.configClick = true;\n  }\n  onRightPanelButtonClick(event) {\n    this.rightPanelClick = true;\n    this.rightPanelActive = !this.rightPanelActive;\n    event.preventDefault();\n  }\n  onRightPanelClick() {\n    this.rightPanelClick = true;\n  }\n  isTablet() {\n    const width = window.innerWidth;\n    return width <= 1024 && width > 640;\n  }\n  isDesktop() {\n    return window.innerWidth > 992;\n  }\n  isMobile() {\n    return window.innerWidth <= 640;\n  }\n  isOverlay() {\n    return this.app.menuMode === 'overlay';\n  }\n  isStatic() {\n    return this.app.menuMode === 'static';\n  }\n  isHorizontal() {\n    return this.app.menuMode === 'horizontal';\n  }\n  blockBodyScroll() {\n    if (document.body.classList) {\n      document.body.classList.add('blocked-scroll');\n    } else {\n      document.body.className += ' blocked-scroll';\n    }\n  }\n  unblockBodyScroll() {\n    if (document.body.classList) {\n      document.body.classList.remove('blocked-scroll');\n    } else {\n      document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  }\n  ngOnDestroy() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n    }\n  }\n}\nAppMainComponent.ɵfac = function AppMainComponent_Factory(t) {\n  return new (t || AppMainComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.MenuService), i0.ɵɵdirectiveInject(i2.PrimeNGConfig), i0.ɵɵdirectiveInject(i3.AppComponent));\n};\nAppMainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppMainComponent,\n  selectors: [[\"app-main\"]],\n  decls: 13,\n  vars: 15,\n  consts: [[1, \"layout-wrapper\", 3, \"ngClass\"], [1, \"menu-wrapper\", 3, \"click\"], [1, \"layout-menu-container\"], [1, \"layout-main\"], [1, \"layout-content\"], [\"class\", \"layout-mask modal-in\", 4, \"ngIf\"], [1, \"layout-mask\", \"modal-in\"]],\n  template: function AppMainComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-topbar\")(2, \"app-rightpanel\");\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵlistener(\"click\", function AppMainComponent_Template_div_click_3_listener($event) {\n        return ctx.onMenuClick($event);\n      });\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelement(5, \"app-menu\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 3);\n      i0.ɵɵelement(7, \"app-breadcrumb\");\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵelement(9, \"router-outlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"app-footer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"app-config\");\n      i0.ɵɵtemplate(12, AppMainComponent_div_12_Template, 1, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(\"layout-menu-\" + ctx.app.menuTheme + \" layout-topbar-\" + ctx.app.topbarTheme);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunctionV(4, _c0, [ctx.app.inputStyle === \"filled\", !ctx.app.ripple, ctx.isStatic(), ctx.isOverlay(), ctx.overlayMenuActive && ctx.isOverlay(), ctx.isHorizontal(), !ctx.staticMenuDesktopInactive && ctx.isStatic(), ctx.staticMenuMobileActive, ctx.app.isRTL, ctx.rightPanelActive]));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", ctx.staticMenuMobileActive);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","AppMainComponent","constructor","renderer","menuService","primengConfig","app","ngAfterViewInit","documentClickListener","listen","event","topbarItemClick","activeTopbarItem","topbarMenuActive","menuClick","isHorizontal","reset","configActive","configClick","rightPanelClick","rightPanelActive","overlayMenuActive","staticMenuMobileActive","menuHoverActive","unblockBodyScroll","searchClick","search","onMenuButtonClick","rotateMenuButton","menuMode","isMobile","isDesktop","staticMenuDesktopInactive","blockBodyScroll","preventDefault","onMenuClick","$event","onTopbarItemClick","item","className","onTopbarSubItemClick","onRTLChange","isRTL","checked","onRippleChange","ripple","onConfigClick","onRightPanelButtonClick","onRightPanelClick","isTablet","width","window","innerWidth","isOverlay","isStatic","document","body","classList","add","remove","replace","RegExp","split","join","ngOnDestroy","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/app.main.component.html","/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/app.main.component.ts"],"sourcesContent":["<div class=\"layout-wrapper\" [ngClass]=\"{'p-input-filled': app.inputStyle === 'filled', 'p-ripple-disabled': !app.ripple,\n        'layout-static': isStatic(),\n        'layout-overlay': isOverlay(),\n        'layout-overlay-active': overlayMenuActive && isOverlay(),\n        'layout-horizontal': isHorizontal(),\n        'layout-static-active': !staticMenuDesktopInactive && isStatic(),\n        'layout-mobile-active': staticMenuMobileActive,\n        'layout-rtl': app.isRTL,\n        'layout-rightpanel-active': rightPanelActive}\" [class]=\"'layout-menu-'+ app.menuTheme+ ' layout-topbar-'+ app.topbarTheme\">\n\n    <app-topbar></app-topbar>\n\n    <app-rightpanel></app-rightpanel>\n\n    <div class=\"menu-wrapper\" (click)=\"onMenuClick($event)\">\n        <div class=\"layout-menu-container\">\n            <app-menu></app-menu>\n        </div>\n    </div>\n\n    <div class=\"layout-main\">\n        <app-breadcrumb></app-breadcrumb>\n\n        <div class=\"layout-content\">\n            <router-outlet></router-outlet>\n        </div>\n\n        <app-footer></app-footer>\n    </div>\n\n    <app-config></app-config>\n\n    <div *ngIf=\"staticMenuMobileActive\" class=\"layout-mask modal-in\"></div>\n\n</div>\n","import {Component, AfterViewInit, Renderer2, OnDestroy, OnInit} from '@angular/core';\nimport { MenuService } from './app.menu.service';\nimport { PrimeNGConfig } from 'primeng/api';\nimport { AppComponent } from './app.component';\n\n@Component({\n    selector: 'app-main',\n    templateUrl: './app.main.component.html'\n})\nexport class AppMainComponent implements AfterViewInit, OnDestroy {\n\n    rotateMenuButton: boolean;\n\n    topbarMenuActive: boolean;\n\n    overlayMenuActive: boolean;\n\n    staticMenuDesktopInactive: boolean;\n\n    staticMenuMobileActive: boolean;\n\n    menuClick: boolean;\n\n    topbarItemClick: boolean;\n\n    activeTopbarItem: any;\n\n    documentClickListener: () => void;\n\n    configActive: boolean;\n\n    configClick: boolean;\n\n    rightPanelActive: boolean;\n\n    rightPanelClick: boolean;\n\n    menuHoverActive = false;\n\n    searchClick = false;\n\n    search = false;\n\n    constructor(public renderer: Renderer2, private menuService: MenuService, private primengConfig: PrimeNGConfig,\n                public app: AppComponent) { }\n\n    ngAfterViewInit() {\n        // hides the horizontal submenus or top menu if outside is clicked\n        this.documentClickListener = this.renderer.listen('body', 'click', (event) => {\n            if (!this.topbarItemClick) {\n                this.activeTopbarItem = null;\n                this.topbarMenuActive = false;\n            }\n\n            if (!this.menuClick && this.isHorizontal()) {\n                this.menuService.reset();\n            }\n\n            if (this.configActive && !this.configClick) {\n                this.configActive = false;\n            }\n\n            if (!this.rightPanelClick) {\n                this.rightPanelActive = false;\n            }\n\n            if (!this.menuClick) {\n                if (this.overlayMenuActive) {\n                    this.overlayMenuActive = false;\n                }\n                if (this.staticMenuMobileActive) {\n                    this.staticMenuMobileActive = false;\n                }\n\n                this.menuHoverActive = false;\n                this.unblockBodyScroll();\n            }\n\n            if (!this.searchClick) {\n                this.search = false;\n            }\n\n            this.searchClick = false;\n            this.configClick = false;\n            this.topbarItemClick = false;\n            this.menuClick = false;\n            this.rightPanelClick = false;\n        });\n    }\n\n    onMenuButtonClick(event) {\n        this.rotateMenuButton = !this.rotateMenuButton;\n        this.topbarMenuActive = false;\n        this.menuClick = true;\n\n        if (this.app.menuMode === 'overlay' && !this.isMobile()) {\n            this.overlayMenuActive = !this.overlayMenuActive;\n        }\n\n        if (this.isDesktop()) {\n            this.staticMenuDesktopInactive = !this.staticMenuDesktopInactive;\n        } else {\n            this.staticMenuMobileActive = !this.staticMenuMobileActive;\n            if (this.staticMenuMobileActive) {\n                this.blockBodyScroll();\n            } else {\n                this.unblockBodyScroll();\n            }\n        }\n\n        event.preventDefault();\n    }\n\n    onMenuClick($event) {\n        this.menuClick = true;\n    }\n\n    onTopbarItemClick(event, item) {\n        this.topbarItemClick = true;\n\n        if (this.activeTopbarItem === item) {\n            this.activeTopbarItem = null;\n        } else {\n            this.activeTopbarItem = item; }\n\n        if (item.className === 'search-item topbar-item') {\n            this.search = !this.search;\n            this.searchClick = !this.searchClick;\n        }\n\n        event.preventDefault();\n    }\n\n    onTopbarSubItemClick(event) {\n        event.preventDefault();\n    }\n\n    onRTLChange(event) {\n        this.app.isRTL = event.checked;\n    }\n\n    onRippleChange(event) {\n        this.app.ripple = event.checked;\n        this.primengConfig.ripple = event.checked;\n    }\n\n    onConfigClick(event) {\n        this.configClick = true;\n    }\n\n    onRightPanelButtonClick(event) {\n        this.rightPanelClick = true;\n        this.rightPanelActive = !this.rightPanelActive;\n        event.preventDefault();\n    }\n\n    onRightPanelClick() {\n        this.rightPanelClick = true;\n    }\n\n    isTablet() {\n        const width = window.innerWidth;\n        return width <= 1024 && width > 640;\n    }\n\n    isDesktop() {\n        return window.innerWidth > 992;\n    }\n\n    isMobile() {\n        return window.innerWidth <= 640;\n    }\n\n    isOverlay() {\n        return this.app.menuMode === 'overlay';\n    }\n\n    isStatic() {\n        return this.app.menuMode === 'static';\n    }\n\n    isHorizontal() {\n        return this.app.menuMode === 'horizontal';\n    }\n\n    blockBodyScroll(): void {\n        if (document.body.classList) {\n            document.body.classList.add('blocked-scroll');\n        } else {\n            document.body.className += ' blocked-scroll';\n        }\n    }\n\n    unblockBodyScroll(): void {\n        if (document.body.classList) {\n            document.body.classList.remove('blocked-scroll');\n        } else {\n            document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' +\n                'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n        }\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}