{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/countryservice\";\nimport * as i2 from \"../../app.breadcrumb.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"primeng/autocomplete\";\nimport * as i5 from \"primeng/calendar\";\nimport * as i6 from \"primeng/chips\";\nimport * as i7 from \"primeng/inputtext\";\nimport * as i8 from \"primeng/dropdown\";\nimport * as i9 from \"primeng/inputnumber\";\nimport * as i10 from \"primeng/inputmask\";\nimport * as i11 from \"primeng/inputtextarea\";\nimport * as i12 from \"primeng/multiselect\";\nimport * as i13 from \"primeng/password\";\nexport class InvalidStateDemoComponent {\n  constructor(countryService, breadcrumbService) {\n    this.countryService = countryService;\n    this.breadcrumbService = breadcrumbService;\n    this.breadcrumbService.setItems([{\n      label: 'UI Kit'\n    }, {\n      label: 'Invalid State'\n    }]);\n    this.cities = [{\n      name: 'New York',\n      code: 'NY'\n    }, {\n      name: 'Rome',\n      code: 'RM'\n    }, {\n      name: 'London',\n      code: 'LDN'\n    }, {\n      name: 'Istanbul',\n      code: 'IST'\n    }, {\n      name: 'Paris',\n      code: 'PRS'\n    }];\n  }\n  ngOnInit() {\n    this.countryService.getCountries().then(countries => {\n      this.countries = countries;\n    });\n  }\n  searchCountry(event) {\n    // in a real application, make a request to a remote url with the query and return filtered results,\n    // for demo we filter at client side\n    const filtered = [];\n    const query = event.query;\n    for (let i = 0; i < this.countries.length; i++) {\n      const country = this.countries[i];\n      if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n        filtered.push(country);\n      }\n    }\n    this.filteredCountries = filtered;\n  }\n}\nInvalidStateDemoComponent.ɵfac = function InvalidStateDemoComponent_Factory(t) {\n  return new (t || InvalidStateDemoComponent)(i0.ɵɵdirectiveInject(i1.CountryService), i0.ɵɵdirectiveInject(i2.AppBreadcrumbService));\n};\nInvalidStateDemoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InvalidStateDemoComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 48,\n  vars: 15,\n  consts: [[1, \"card\"], [1, \"grid\", \"p-fluid\"], [1, \"col-12\", \"md:col-6\"], [1, \"field\", \"mt-3\"], [\"for\", \"inputtext\"], [\"type\", \"text\", \"id\", \"inputtext\", \"pInputText\", \"\", 1, \"ng-invalid\", \"ng-dirty\"], [1, \"field\"], [\"for\", \"autocomplete\"], [\"inputId\", \"autocomplete\", \"field\", \"name\", 1, \"ng-invalid\", \"ng-dirty\", 3, \"ngModel\", \"suggestions\", \"ngModelChange\", \"completeMethod\"], [\"for\", \"calendar\"], [\"inputId\", \"calendar\", 1, \"ng-invalid\", \"ng-dirty\", 3, \"ngModel\", \"showIcon\", \"ngModelChange\"], [\"for\", \"chips\"], [\"inputId\", \"chips\", 1, \"ng-invalid\", \"ng-dirty\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [1, \"ng-invalid\", \"ng-dirty\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputmask\"], [\"inputId\", \"inputmask\", \"mask\", \"99/99/9999\", 1, \"ng-invalid\", \"ng-dirty\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputnumber\"], [\"inputId\", \"inputnumber\", 1, \"ng-invalid\", \"ng-dirty\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dropdown\"], [\"inputId\", \"dropdown\", \"optionLabel\", \"name\", 1, \"ng-invalid\", \"ng-dirty\", 3, \"autoDisplayFirst\", \"options\", \"ngModel\", \"ngModelChange\"], [\"for\", \"multiselect\"], [\"inputId\", \"multiselect\", \"optionLabel\", \"name\", 1, \"ng-invalid\", \"ng-dirty\", 3, \"options\", \"ngModel\", \"filter\", \"ngModelChange\"], [\"for\", \"textarea\"], [\"inputId\", \"textarea\", \"rows\", \"3\", \"cols\", \"30\", \"pInputTextarea\", \"\", 1, \"ng-invalid\", \"ng-dirty\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function InvalidStateDemoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\");\n      i0.ɵɵtext(2, \"Invalid State\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"All form components have an invalid state style to display the validation errors when ng-invalid ng-dirty combination is applied by Angular.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"div\", 3)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"InputText\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"AutoComplete\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p-autoComplete\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function InvalidStateDemoComponent_Template_p_autoComplete_ngModelChange_14_listener($event) {\n        return ctx.value1 = $event;\n      })(\"completeMethod\", function InvalidStateDemoComponent_Template_p_autoComplete_completeMethod_14_listener($event) {\n        return ctx.searchCountry($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 9);\n      i0.ɵɵtext(17, \"Calendar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p-calendar\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function InvalidStateDemoComponent_Template_p_calendar_ngModelChange_18_listener($event) {\n        return ctx.value2 = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"Chips\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"p-chips\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function InvalidStateDemoComponent_Template_p_chips_ngModelChange_22_listener($event) {\n        return ctx.value3 = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 6)(24, \"label\", 13);\n      i0.ɵɵtext(25, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"p-password\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function InvalidStateDemoComponent_Template_p_password_ngModelChange_26_listener($event) {\n        return ctx.value8 = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"div\", 2)(28, \"div\", 3)(29, \"label\", 15);\n      i0.ɵɵtext(30, \"InputMask\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"p-inputMask\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function InvalidStateDemoComponent_Template_p_inputMask_ngModelChange_31_listener($event) {\n        return ctx.value5 = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 6)(33, \"label\", 17);\n      i0.ɵɵtext(34, \"InputNumber\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"p-inputNumber\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function InvalidStateDemoComponent_Template_p_inputNumber_ngModelChange_35_listener($event) {\n        return ctx.value6 = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 6)(37, \"label\", 19);\n      i0.ɵɵtext(38, \"Dropdown\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"p-dropdown\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function InvalidStateDemoComponent_Template_p_dropdown_ngModelChange_39_listener($event) {\n        return ctx.value9 = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 6)(41, \"label\", 21);\n      i0.ɵɵtext(42, \"MultiSelect\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"p-multiSelect\", 22);\n      i0.ɵɵlistener(\"ngModelChange\", function InvalidStateDemoComponent_Template_p_multiSelect_ngModelChange_43_listener($event) {\n        return ctx.value10 = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 6)(45, \"label\", 23);\n      i0.ɵɵtext(46, \"Textarea\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"textarea\", 24);\n      i0.ɵɵlistener(\"ngModelChange\", function InvalidStateDemoComponent_Template_textarea_ngModelChange_47_listener($event) {\n        return ctx.value4 = $event;\n      });\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.value1)(\"suggestions\", ctx.filteredCountries);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.value2)(\"showIcon\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.value3);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.value8);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.value5);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.value6);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"autoDisplayFirst\", false)(\"options\", ctx.cities)(\"ngModel\", ctx.value9);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"options\", ctx.cities)(\"ngModel\", ctx.value10)(\"filter\", false);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.value4);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.AutoComplete, i5.Calendar, i6.Chips, i7.InputText, i8.Dropdown, i9.InputNumber, i10.InputMask, i11.InputTextarea, i12.MultiSelect, i13.Password],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAOA,OAAM,MAAOA,yBAAyB;EA6BlCC,YAAoBC,cAA8B,EAAUC,iBAAuC;IAA/E,mBAAc,GAAdD,cAAc;IAA0B,sBAAiB,GAAjBC,iBAAiB;IACzE,IAAI,CAACA,iBAAiB,CAACC,QAAQ,CAAC,CAC5B;MAACC,KAAK,EAAE;IAAQ,CAAC,EACjB;MAACA,KAAK,EAAE;IAAe,CAAC,CAC3B,CAAC;IAEF,IAAI,CAACC,MAAM,GAAG,CACV;MAACC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAI,CAAC,EAC9B;MAACD,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAI,CAAC,EAC1B;MAACD,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAK,CAAC,EAC7B;MAACD,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAK,CAAC,EAC/B;MAACD,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAK,CAAC,CAC/B;EACL;EAEAC,QAAQ;IACJ,IAAI,CAACP,cAAc,CAACQ,YAAY,EAAE,CAACC,IAAI,CAACC,SAAS,IAAG;MAChD,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC9B,CAAC,CAAC;EACN;EAEAC,aAAa,CAACC,KAAK;IACf;IACA;IACA,MAAMC,QAAQ,GAAU,EAAE;IAC1B,MAAMC,KAAK,GAAGF,KAAK,CAACE,KAAK;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACL,SAAS,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5C,MAAME,OAAO,GAAG,IAAI,CAACP,SAAS,CAACK,CAAC,CAAC;MACjC,IAAIE,OAAO,CAACZ,IAAI,CAACa,WAAW,EAAE,CAACC,OAAO,CAACL,KAAK,CAACI,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE;QAC9DL,QAAQ,CAACO,IAAI,CAACH,OAAO,CAAC;;;IAI9B,IAAI,CAACI,iBAAiB,GAAGR,QAAQ;EACrC;;;mBA/DSf,yBAAyB;AAAA;;QAAzBA,yBAAyB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPtCC,8BAAkB;MACVA,6BAAa;MAAAA,iBAAK;MACtBA,yBAAG;MAAAA,4JAA4I;MAAAA,iBAAI;MACnJA,8BAA0B;MAGSA,yBAAS;MAAAA,iBAAQ;MACxCA,4BAAyE;MAC7EA,iBAAM;MACNA,+BAAmB;MACWA,6BAAY;MAAAA,iBAAQ;MAC9CA,0CAAgL;MAAzIA;QAAA;MAAA,EAAoB;QAAA,OAAqDC,yBAAqB;MAAA,EAA1E;MAAqHD,iBAAiB;MAGrMA,+BAAmB;MACOA,yBAAQ;MAAAA,iBAAQ;MACtCA,uCAAkG;MAAnEA;QAAA;MAAA,EAAoB;MAA+CA,iBAAa;MAEnHA,+BAAmB;MACIA,sBAAK;MAAAA,iBAAQ;MAChCA,oCAA0E;MAAjDA;QAAA;MAAA,EAAoB;MAA6BA,iBAAU;MAExFA,+BAAmB;MACOA,yBAAQ;MAAAA,iBAAQ;MACtCA,uCAA6D;MAAjDA;QAAA;MAAA,EAAoB;MAA6BA,iBAAa;MAIlFA,+BAA6B;MAEEA,0BAAS;MAAAA,iBAAQ;MACxCA,wCAAoG;MAAjDA;QAAA;MAAA,EAAoB;MAA6BA,iBAAc;MAEtHA,+BAAmB;MACUA,4BAAW;MAAAA,iBAAQ;MAC5CA,0CAAsF;MAAjDA;QAAA;MAAA,EAAoB;MAA6BA,iBAAgB;MAE1GA,+BAAmB;MACOA,yBAAQ;MAAAA,iBAAQ;MACtCA,uCAAiJ;MAApEA;QAAA;MAAA,EAAoB;MAAgDA,iBAAa;MAElKA,+BAAmB;MACUA,4BAAW;MAAAA,iBAAQ;MAC5CA,0CAA8I;MAAtFA;QAAA;MAAA,EAAqB;MAAiEA,iBAAgB;MAElKA,+BAAmB;MACOA,yBAAQ;MAAAA,iBAAQ;MACtCA,qCAAgH;MAAhEA;QAAA;MAAA,EAAoB;MAA4CA,iBAAW;;;MApCpFA,gBAAoB;MAApBA,oCAAoB;MAK5BA,eAAoB;MAApBA,oCAAoB;MAI1BA,eAAoB;MAApBA,oCAAoB;MAIjCA,eAAoB;MAApBA,oCAAoB;MAOmBA,eAAoB;MAApBA,oCAAoB;MAIlCA,eAAoB;MAApBA,oCAAoB;MAI1BA,eAA0B;MAA1BA,wCAA0B;MAIpBA,eAAkB;MAAlBA,oCAAkB;MAIPA,eAAoB;MAApBA,oCAAoB","names":["InvalidStateDemoComponent","constructor","countryService","breadcrumbService","setItems","label","cities","name","code","ngOnInit","getCountries","then","countries","searchCountry","event","filtered","query","i","length","country","toLowerCase","indexOf","push","filteredCountries","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/demo/view/invalidstatedemo.component.ts","/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/demo/view/invalidstatedemo.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {CountryService} from '../service/countryservice';\nimport {AppBreadcrumbService} from '../../app.breadcrumb.service';\n\n@Component({\n    templateUrl: './invalidstatedemo.component.html'\n})\nexport class InvalidStateDemoComponent implements OnInit {\n\n\n    countries: any[];\n\n    cities: any[];\n\n    filteredCountries: any[];\n\n    value1: any;\n\n    value2: any;\n\n    value3: any;\n\n    value4: any;\n\n    value5: any;\n\n    value6: any;\n\n    value7: any;\n\n    value8: any;\n\n    value9: any;\n\n    value10: any;\n\n    constructor(private countryService: CountryService, private breadcrumbService: AppBreadcrumbService) {\n        this.breadcrumbService.setItems([\n            {label: 'UI Kit'},\n            {label: 'Invalid State'}\n        ]);\n\n        this.cities = [\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ];\n    }\n\n    ngOnInit() {\n        this.countryService.getCountries().then(countries => {\n            this.countries = countries;\n        });\n    }\n\n    searchCountry(event) {\n        // in a real application, make a request to a remote url with the query and return filtered results,\n        // for demo we filter at client side\n        const filtered: any[] = [];\n        const query = event.query;\n        for (let i = 0; i < this.countries.length; i++) {\n            const country = this.countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n                filtered.push(country);\n            }\n        }\n\n        this.filteredCountries = filtered;\n    }\n}\n","<div class=\"card\">\n    <h5>Invalid State</h5>\n    <p>All form components have an invalid state style to display the validation errors when ng-invalid ng-dirty combination is applied by Angular.</p>\n    <div class=\"grid p-fluid\">\n        <div class=\"col-12 md:col-6\">\n            <div class=\"field mt-3\">\n                <label for=\"inputtext\">InputText</label>\n                <input type=\"text\" id=\"inputtext\" pInputText class=\"ng-invalid ng-dirty\">\n            </div>\n            <div class=\"field\">\n                <label for=\"autocomplete\">AutoComplete</label>\n                <p-autoComplete inputId=\"autocomplete\" [(ngModel)]=\"value1\" [suggestions]=\"filteredCountries\" (completeMethod)=\"searchCountry($event)\" field=\"name\" class=\"ng-invalid ng-dirty\"></p-autoComplete>\n\n            </div>\n            <div class=\"field\">\n                <label for=\"calendar\">Calendar</label>\n                <p-calendar inputId=\"calendar\" [(ngModel)]=\"value2\" class=\"ng-invalid ng-dirty\" [showIcon]=\"true\"></p-calendar>\n            </div>\n            <div class=\"field\">\n                <label for=\"chips\">Chips</label>\n                <p-chips inputId=\"chips\" [(ngModel)]=\"value3\" class=\"ng-invalid ng-dirty\"></p-chips>\n            </div>\n            <div class=\"field\">\n                <label for=\"password\">Password</label>\n                <p-password [(ngModel)]=\"value8\" class=\"ng-invalid ng-dirty\"></p-password>\n            </div>\n        </div>\n        \n        <div class=\"col-12 md:col-6\">                    \n            <div class=\"field mt-3\">\n                <label for=\"inputmask\">InputMask</label>\n                <p-inputMask inputId=\"inputmask\" mask=\"99/99/9999\" [(ngModel)]=\"value5\" class=\"ng-invalid ng-dirty\"></p-inputMask>\n            </div>\n            <div class=\"field\">\n                <label for=\"inputnumber\">InputNumber</label>\n                <p-inputNumber inputId=\"inputnumber\" [(ngModel)]=\"value6\" class=\"ng-invalid ng-dirty\"></p-inputNumber>\n            </div>\n            <div class=\"field\">\n                <label for=\"dropdown\">Dropdown</label>\n                <p-dropdown inputId=\"dropdown\" [autoDisplayFirst]=\"false\" [options]=\"cities\" [(ngModel)]=\"value9\" optionLabel=\"name\" class=\"ng-invalid ng-dirty\"></p-dropdown>\n            </div>\n            <div class=\"field\">\n                <label for=\"multiselect\">MultiSelect</label>\n                <p-multiSelect inputId=\"multiselect\" [options]=\"cities\" [(ngModel)]=\"value10\" optionLabel=\"name\" [filter]=\"false\" class=\"ng-invalid ng-dirty\"></p-multiSelect>\n            </div>\n            <div class=\"field\">\n                <label for=\"textarea\">Textarea</label>\n                <textarea inputId=\"textarea\" rows=\"3\" cols=\"30\" [(ngModel)]=\"value4\" pInputTextarea class=\"ng-invalid ng-dirty\"></textarea>\n            </div>\n        </div>\n    </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}