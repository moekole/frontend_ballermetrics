{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/nodeservice\";\nimport * as i2 from \"../../app.breadcrumb.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/tree\";\nimport * as i6 from \"primeng/treetable\";\nfunction TreeDemoComponent_ng_template_11_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", col_r4.header, \" \");\n  }\n}\nfunction TreeDemoComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, TreeDemoComponent_ng_template_11_th_1_Template, 2, 1, \"th\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const columns_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r2);\n  }\n}\nfunction TreeDemoComponent_ng_template_12_td_1_p_treeTableToggler_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-treeTableToggler\", 11);\n  }\n  if (rf & 2) {\n    const rowNode_r5 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"rowNode\", rowNode_r5);\n  }\n}\nfunction TreeDemoComponent_ng_template_12_td_1_p_treeTableCheckbox_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-treeTableCheckbox\", 12);\n  }\n  if (rf & 2) {\n    const rowNode_r5 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"value\", rowNode_r5);\n  }\n}\nfunction TreeDemoComponent_ng_template_12_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, TreeDemoComponent_ng_template_12_td_1_p_treeTableToggler_1_Template, 1, 1, \"p-treeTableToggler\", 9);\n    i0.ɵɵtemplate(2, TreeDemoComponent_ng_template_12_td_1_p_treeTableCheckbox_2_Template, 1, 1, \"p-treeTableCheckbox\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const rowData_r6 = i0.ɵɵnextContext().rowData;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r10 == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r10 == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", rowData_r6[col_r9.field], \" \");\n  }\n}\nfunction TreeDemoComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, TreeDemoComponent_ng_template_12_td_1_Template, 4, 3, \"td\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const columns_r7 = ctx.columns;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r7);\n  }\n}\nexport class TreeDemoComponent {\n  constructor(nodeService, breadcrumbService) {\n    this.nodeService = nodeService;\n    this.breadcrumbService = breadcrumbService;\n    this.breadcrumbService.setItems([{\n      label: 'UI Kit'\n    }, {\n      label: 'Tree'\n    }]);\n  }\n  ngOnInit() {\n    this.nodeService.getFiles().then(files => this.files1 = files);\n    this.nodeService.getFilesystem().then(files => this.files2 = files);\n    this.nodeService.getFiles().then(files => {\n      this.files3 = [{\n        label: 'Root',\n        children: files\n      }];\n    });\n    this.cols = [{\n      field: 'name',\n      header: 'Name'\n    }, {\n      field: 'size',\n      header: 'Size'\n    }, {\n      field: 'type',\n      header: 'Type'\n    }];\n  }\n}\nTreeDemoComponent.ɵfac = function TreeDemoComponent_Factory(t) {\n  return new (t || TreeDemoComponent)(i0.ɵɵdirectiveInject(i1.NodeService), i0.ɵɵdirectiveInject(i2.AppBreadcrumbService));\n};\nTreeDemoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TreeDemoComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 18,\n  vars: 7,\n  consts: [[1, \"grid\"], [1, \"col-12\"], [1, \"card\"], [\"selectionMode\", \"checkbox\", 3, \"value\", \"selection\", \"selectionChange\"], [\"selectionMode\", \"checkbox\", 3, \"value\", \"columns\", \"selection\", \"selectionChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"layout\", \"horizontal\", \"selectionMode\", \"single\", 3, \"value\", \"selection\", \"selectionChange\"], [4, \"ngFor\", \"ngForOf\"], [3, \"rowNode\", 4, \"ngIf\"], [3, \"value\", 4, \"ngIf\"], [3, \"rowNode\"], [3, \"value\"]],\n  template: function TreeDemoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n      i0.ɵɵtext(4, \"Tree\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p-tree\", 3);\n      i0.ɵɵlistener(\"selectionChange\", function TreeDemoComponent_Template_p_tree_selectionChange_5_listener($event) {\n        return ctx.selectedFiles1 = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 2)(8, \"h5\");\n      i0.ɵɵtext(9, \"TreeTable\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p-treeTable\", 4);\n      i0.ɵɵlistener(\"selectionChange\", function TreeDemoComponent_Template_p_treeTable_selectionChange_10_listener($event) {\n        return ctx.selectedFiles2 = $event;\n      });\n      i0.ɵɵtemplate(11, TreeDemoComponent_ng_template_11_Template, 2, 1, \"ng-template\", 5);\n      i0.ɵɵtemplate(12, TreeDemoComponent_ng_template_12_Template, 2, 1, \"ng-template\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"div\", 2)(15, \"h5\");\n      i0.ɵɵtext(16, \"Horizontal Tree\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p-tree\", 7);\n      i0.ɵɵlistener(\"selectionChange\", function TreeDemoComponent_Template_p_tree_selectionChange_17_listener($event) {\n        return ctx.selectedFiles3 = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.files1)(\"selection\", ctx.selectedFiles1);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.files2)(\"columns\", ctx.cols)(\"selection\", ctx.selectedFiles2);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"value\", ctx.files3)(\"selection\", ctx.selectedFiles3);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.PrimeTemplate, i5.Tree, i6.TreeTable, i6.TreeTableToggler, i6.TTCheckbox],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;IAaMA,0BAAgC;IAC/BA,YACD;IAAAA,iBAAK;;;;IADJA,eACD;IADCA,8CACD;;;;;IAHDA,0BAAI;IACHA,+EAEK;IACNA,iBAAK;;;;IAHgBA,eAAU;IAAVA,oCAAU;;;;;IAQ7BA,yCAA4E;;;;IAAxDA,oCAAmB;;;;;IACvCA,0CAA4E;;;;IAAvDA,kCAAiB;;;;;IAFvCA,0BAA+C;IAC9CA,oHAA4E;IAC5EA,uHAA4E;IAC5EA,YACD;IAAAA,iBAAK;;;;;;IAHqCA,eAAY;IAAZA,iCAAY;IACbA,eAAY;IAAZA,iCAAY;IACpDA,eACD;IADCA,yDACD;;;;;IALDA,0BAAI;IACHA,+EAIK;IACNA,iBAAK;;;;IALgBA,eAAY;IAAZA,oCAAY;;;ACZtC,OAAM,MAAOC,iBAAiB;EAiB1BC,YAAoBC,WAAwB,EAAUC,iBAAuC;IAAzE,gBAAW,GAAXD,WAAW;IAAuB,sBAAiB,GAAjBC,iBAAiB;IACnE,IAAI,CAACA,iBAAiB,CAACC,QAAQ,CAAC,CAC5B;MAACC,KAAK,EAAE;IAAQ,CAAC,EACjB;MAACA,KAAK,EAAE;IAAM,CAAC,CAClB,CAAC;EACN;EAEAC,QAAQ;IACJ,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE,CAACC,IAAI,CAACC,KAAK,IAAI,IAAI,CAACC,MAAM,GAAGD,KAAK,CAAC;IAC9D,IAAI,CAACP,WAAW,CAACS,aAAa,EAAE,CAACH,IAAI,CAACC,KAAK,IAAI,IAAI,CAACG,MAAM,GAAGH,KAAK,CAAC;IACnE,IAAI,CAACP,WAAW,CAACK,QAAQ,EAAE,CAACC,IAAI,CAACC,KAAK,IAAG;MACrC,IAAI,CAACI,MAAM,GAAG,CAAC;QACXR,KAAK,EAAE,MAAM;QACbS,QAAQ,EAAEL;OACb,CAAC;IACN,CAAC,CAAC;IAEF,IAAI,CAACM,IAAI,GAAG,CACR;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAM,CAAE,EACjC;MAAED,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAM,CAAE,EACjC;MAAED,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAM,CAAE,CACpC;EACL;;;mBAvCSjB,iBAAiB;AAAA;;QAAjBA,iBAAiB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR9BvB,8BAAkB;MAGXA,oBAAI;MAAAA,iBAAK;MACbA,iCAAiF;MAA/BA;QAAA;MAAA,EAA8B;MAACA,iBAAS;MAG5FA,8BAAoB;MAEdA,yBAAS;MAAAA,iBAAK;MAClBA,uCAAuG;MAA/BA;QAAA;MAAA,EAA8B;MACrGA,oFAMc;MACdA,oFAQc;MACfA,iBAAc;MAGhBA,+BAAoB;MAEdA,gCAAe;MAAAA,iBAAK;MACxBA,kCAAmG;MAA/BA;QAAA;MAAA,EAA8B;MAACA,iBAAS;;;MA7BpGA,eAAgB;MAAhBA,kCAAgB;MAMXA,eAAgB;MAAhBA,kCAAgB;MAuBrBA,eAAgB;MAAhBA,kCAAgB","names":["i0","TreeDemoComponent","constructor","nodeService","breadcrumbService","setItems","label","ngOnInit","getFiles","then","files","files1","getFilesystem","files2","files3","children","cols","field","header","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/demo/view/treedemo.component.html","/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/demo/view/treedemo.component.ts"],"sourcesContent":["<div class=\"grid\">\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>Tree</h5>\n\t\t\t<p-tree [value]=\"files1\" selectionMode=\"checkbox\" [(selection)]=\"selectedFiles1\"></p-tree>\n\t\t</div>\n\t</div>\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>TreeTable</h5>\n\t\t\t<p-treeTable [value]=\"files2\" [columns]=\"cols\" selectionMode=\"checkbox\" [(selection)]=\"selectedFiles2\">\n\t\t\t\t<ng-template pTemplate=\"header\" let-columns>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th *ngFor=\"let col of columns\">\n\t\t\t\t\t\t\t{{col.header}}\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td *ngFor=\"let col of columns; let i = index\">\n\t\t\t\t\t\t\t<p-treeTableToggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></p-treeTableToggler>\n\t\t\t\t\t\t\t<p-treeTableCheckbox [value]=\"rowNode\" *ngIf=\"i == 0\"></p-treeTableCheckbox>\n\t\t\t\t\t\t\t{{rowData[col.field]}}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</ng-template>\n\t\t\t</p-treeTable>\n\t\t</div>\n\t</div>\n\t<div class=\"col-12\">\n\t\t<div class=\"card\">\n\t\t\t<h5>Horizontal Tree</h5>\n\t\t\t<p-tree [value]=\"files3\" layout=\"horizontal\" selectionMode=\"single\" [(selection)]=\"selectedFiles3\"></p-tree>\n\t\t</div>\n\t</div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {NodeService} from '../service/nodeservice';\nimport {TreeNode} from 'primeng/api';\nimport {AppBreadcrumbService} from '../../app.breadcrumb.service';\n\n@Component({\n    templateUrl: './treedemo.component.html'\n})\nexport class TreeDemoComponent implements OnInit {\n\n\n    files1: TreeNode[];\n\n    files2: TreeNode[];\n\n    files3: TreeNode[];\n\n    selectedFiles1: TreeNode;\n\n    selectedFiles2: TreeNode[];\n\n    selectedFiles3: TreeNode;\n\n    cols: any[];\n\n    constructor(private nodeService: NodeService, private breadcrumbService: AppBreadcrumbService) {\n        this.breadcrumbService.setItems([\n            {label: 'UI Kit'},\n            {label: 'Tree'}\n        ]);\n    }\n\n    ngOnInit() {\n        this.nodeService.getFiles().then(files => this.files1 = files);\n        this.nodeService.getFilesystem().then(files => this.files2 = files);\n        this.nodeService.getFiles().then(files => {\n            this.files3 = [{\n                label: 'Root',\n                children: files\n            }];\n        });\n\n        this.cols = [\n            { field: 'name', header: 'Name' },\n            { field: 'size', header: 'Size' },\n            { field: 'type', header: 'Type' }\n        ];\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}