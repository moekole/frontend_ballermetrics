{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MatchesComponent = class MatchesComponent {\n  constructor(productService, breadcrumbService) {\n    this.productService = productService;\n    this.breadcrumbService = breadcrumbService;\n    this.breadcrumbService.setItems([{\n      label: 'UI Kit'\n    }, {\n      label: 'List'\n    }]);\n  }\n  ngOnInit() {\n    this.productService.getProducts().then(data => this.products = data);\n    this.sourceCities = [{\n      name: 'Graz',\n      code: 'GRZ'\n    }, {\n      name: 'WIEN',\n      code: 'VNE'\n    }, {\n      name: 'MÜNCHEN',\n      code: 'MNCH'\n    }];\n    this.targetCities = [];\n    this.orderCities = [{\n      name: 'San Francisco',\n      code: 'SF'\n    }, {\n      name: 'London',\n      code: 'LDN'\n    }, {\n      name: 'Paris',\n      code: 'PRS'\n    }, {\n      name: 'Istanbul',\n      code: 'IST'\n    }, {\n      name: 'Berlin',\n      code: 'BRL'\n    }, {\n      name: 'Barcelona',\n      code: 'BRC'\n    }, {\n      name: 'Rome',\n      code: 'RM'\n    }];\n    this.sortOptions = [{\n      label: 'Price High to Low',\n      value: '!price'\n    }, {\n      label: 'Price Low to High',\n      value: 'price'\n    }];\n    var options = {\n      method: 'GET'\n    };\n    fetch(\"http://localhost:3000/teams/newest\", options).then(response => response.json()).then(result => {\n      console.log(result);\n      this.showPlayer(result);\n    }).catch(error => console.log('error', error));\n  }\n  showPlayer(json) {\n    console.log(\"drinnen\");\n    console.log(json);\n    var output = \"\";\n    for (let i in json) {\n      console.log(\"home: \" + json[i]['home_team_id']['full_name']);\n      console.log(\"visitor: \" + json[i]['visitor_team_id']['full_name']);\n      console.log(\"season: \" + json[i]['season']);\n      console.log(\"homes: \" + json[i]['home_team_score']);\n      console.log(\"visitors: \" + json[i]['visitor_team_score']);\n      const homeTeamName = json[i]['home_team_id']['full_name'];\n      const visitorTeamName = json[i]['visitor_team_id']['full_name'];\n      const season = json[i]['season'];\n      const homescore = json[i]['home_team_score'];\n      const visitorScore = json[i]['visitor_team_score'];\n      output += `<div class=\"flex flex-column md:flex-row align-items-center p-3 w-full\">\n            <img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" class=\"my-4 md:my-0 w-9 md:w-10rem shadow-2 mr-5\"/>\n            <div class=\"flex-1 text-center md:text-center\">\n                <div class=\"font-bold text-2xl\">${homeTeamName}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ${visitorTeamName}</div>\n                <div class=\"mb-3\">USA</div>\n                <div class=\"mb-3\">Season: ${season}</div>\n                <div class=\"font-bold text-2xl\">Score: ${homescore} / ${visitorScore}</div>\n            </div>\n\n\n            <div class=\"flex flex-row md:flex-column justify-content-between w-full md:w-auto align-items-center md:align-items-end mt-5 md:mt-0\">\n                <p-button icon=\"pi pi-arrow-right\" label=\"weitere Infos\" class=\"mb-2\"></p-button>\n            </div>\n        </div>`;\n      console.log(output);\n      console.log(document.getElementById('newestmatches').innerHTML);\n      document.getElementById('newestmatches').innerHTML = output;\n    }\n  }\n  onSortChange(event) {\n    const value = event.value;\n    if (value.indexOf('!') === 0) {\n      this.sortOrder = -1;\n      this.sortField = value.substring(1, value.length);\n    } else {\n      this.sortOrder = 1;\n      this.sortField = value;\n    }\n  }\n};\nMatchesComponent = __decorate([Component({\n  selector: 'app-matches',\n  templateUrl: './matches.component.html'\n})], MatchesComponent);\nexport { MatchesComponent };","map":{"version":3,"mappings":"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","names":["Component","MatchesComponent","constructor","productService","breadcrumbService","setItems","label","ngOnInit","getProducts","then","data","products","sourceCities","name","code","targetCities","orderCities","sortOptions","value","options","method","fetch","response","json","result","console","log","showPlayer","catch","error","output","i","homeTeamName","visitorTeamName","season","homescore","visitorScore","document","getElementById","innerHTML","onSortChange","event","indexOf","sortOrder","sortField","substring","length","selector","templateUrl"],"sourceRoot":"","sources":["/Users/moe/Documents/syp 5.klasse/frontend_ballermetrics/src/app/demo/view/matches.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {SelectItem} from 'primeng/api';\nimport {Product} from '../domain/product';\nimport {ProductService} from '../service/productservice';\nimport {AppBreadcrumbService} from '../../app.breadcrumb.service';\n\n@Component({\n  selector: 'app-matches',\n  templateUrl: './matches.component.html'\n})\nexport class MatchesComponent {\n\n  products: Product[];\n\n    sortOptions: SelectItem[];\n\n    sortOrder: number;\n\n    sortField: string;\n\n    sourceCities: any[];\n\n    targetCities: any[];\n\n    orderCities: any[];\n\n    constructor(private productService: ProductService, private breadcrumbService: AppBreadcrumbService) {\n        this.breadcrumbService.setItems([\n            {label: 'UI Kit'},\n            {label: 'List'}\n        ]);\n    }\n\n    ngOnInit() {\n        this.productService.getProducts().then(data => this.products = data);\n\n        this.sourceCities = [\n            {name: 'Graz', code: 'GRZ'},\n            {name: 'WIEN', code: 'VNE'},\n            {name: 'MÜNCHEN', code: 'MNCH'}];\n        this.targetCities = [];\n\n        this.orderCities = [\n            {name: 'San Francisco', code: 'SF'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Paris', code: 'PRS'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Berlin', code: 'BRL'},\n            {name: 'Barcelona', code: 'BRC'},\n            {name: 'Rome', code: 'RM'}];\n\n        this.sortOptions = [\n            {label: 'Price High to Low', value: '!price'},\n            {label: 'Price Low to High', value: 'price'}\n        ];\n\n\n        var options = {\n            method: 'GET'\n          };\n\n          \n          fetch(\"http://localhost:3000/teams/newest\", options)\n            .then(response => response.json())\n            .then(result => {\n                console.log(result);\n                this.showPlayer(result);\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    showPlayer(json:any)\n    {\n        console.log(\"drinnen\");\n        console.log(json);\n        \n\n        var output=\"\";\n\n        for(let i in json)\n        {\n            console.log(\"home: \"+json[i]['home_team_id']['full_name']);\n            console.log(\"visitor: \"+json[i]['visitor_team_id']['full_name']);\n            console.log(\"season: \"+json[i]['season']);\n            console.log(\"homes: \"+json[i]['home_team_score']);\n            console.log(\"visitors: \"+json[i]['visitor_team_score']);\n\n            const homeTeamName = json[i]['home_team_id']['full_name'];\n            const visitorTeamName = json[i]['visitor_team_id']['full_name'];\n            const season = json[i]['season'];\n            const homescore = json[i]['home_team_score'];\n            const visitorScore = json[i]['visitor_team_score'];\n\n\n            output += (`<div class=\"flex flex-column md:flex-row align-items-center p-3 w-full\">\n            <img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" class=\"my-4 md:my-0 w-9 md:w-10rem shadow-2 mr-5\"/>\n            <div class=\"flex-1 text-center md:text-center\">\n                <div class=\"font-bold text-2xl\">${homeTeamName}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ${visitorTeamName}</div>\n                <div class=\"mb-3\">USA</div>\n                <div class=\"mb-3\">Season: ${season}</div>\n                <div class=\"font-bold text-2xl\">Score: ${homescore} / ${visitorScore}</div>\n            </div>\n\n\n            <div class=\"flex flex-row md:flex-column justify-content-between w-full md:w-auto align-items-center md:align-items-end mt-5 md:mt-0\">\n                <p-button icon=\"pi pi-arrow-right\" label=\"weitere Infos\" class=\"mb-2\"></p-button>\n            </div>\n        </div>`)\n\n            console.log(output);\n            console.log(document.getElementById('newestmatches').innerHTML);\n            document.getElementById('newestmatches').innerHTML = output;\n\n        }\n\n        \n        \n    }\n\n    onSortChange(event) {\n        const value = event.value;\n\n        if (value.indexOf('!') === 0) {\n            this.sortOrder = -1;\n            this.sortField = value.substring(1, value.length);\n        } else {\n            this.sortOrder = 1;\n            this.sortField = value;\n        }\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}